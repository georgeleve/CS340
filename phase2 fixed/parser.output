Terminals unused in grammar

    UMINUS


State 38 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr MUL expr
   17     | expr DIV expr
   18     | expr MODULO expr
   19     | expr GREATER expr
   20     | expr GREATER_EQUAL expr
   21     | expr LESS expr
   22     | expr LESS_EQUAL expr
   23     | expr EQUAL expr
   24     | expr NOT_EQUAL expr
   25     | expr AND expr
   26     | expr OR expr
   27     | term

   28 term: LEFT_PARENTH expr RIGHT_PARENTH
   29     | MINUS expr
   30     | NOT expr
   31     | PLUS_PLUS lvalue
   32     | lvalue PLUS_PLUS
   33     | MINUS_MINUS lvalue
   34     | lvalue MINUS_MINUS
   35     | primary

   36 assignexpr: ID ASSIGN expr
   37           | LOCAL ID ASSIGN expr
   38           | DOUBLE_COLON ID ASSIGN expr
   39           | ID ASSIGN funcdef
   40           | LOCAL ID ASSIGN funcdef
   41           | DOUBLE_COLON ID ASSIGN funcdef
   42           | member ASSIGN expr

   43 primary: lvalue
   44        | call
   45        | objectdef
   46        | LEFT_PARENTH funcdef RIGHT_PARENTH
   47        | const

   48 lvalue: ID
   49       | LOCAL ID
   50       | DOUBLE_COLON ID
   51       | member

   52 member: lvalue DOT ID
   53       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   54       | call DOT ID
   55       | call LEFT_BRACKET expr RIGHT_BRACKET

   56 call: call LEFT_PARENTH elist RIGHT_PARENTH
   57     | lvalue callsuffix
   58     | LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

   59 callsuffix: normcall
   60           | methodcall

   61 normcall: LEFT_PARENTH elist RIGHT_PARENTH

   62 methodcall: DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH

   63 elist: expr
   64      | elist COMMA expr
   65      | %empty

   66 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   67          | LEFT_BRACKET indexed RIGHT_BRACKET

   68 indexed: indexedelem
   69        | indexed COMMA indexedelem

   70 $@1: %empty

   71 $@2: %empty

   72 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr RIGHT_BRACE

   73 temp_stmt: temp_stmt stmt
   74          | %empty

   75 $@3: %empty

   76 $@4: %empty

   77 block: LEFT_BRACE $@3 temp_stmt $@4 RIGHT_BRACE

   78 $@5: %empty

   79 $@6: %empty

   80 funcdef: FUNCTION ID $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

   81 $@7: %empty

   82 $@8: %empty

   83 funcdef: FUNCTION $@7 LEFT_PARENTH $@8 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

   84 const: INTEGER
   85      | FLOAT
   86      | STRING
   87      | NIL
   88      | TRUE
   89      | FALSE

   90 idlist: ID
   91       | idlist COMMA ID
   92       | %empty

   93 $@9: %empty

   94 ifstmt: IF LEFT_PARENTH expr RIGHT_PARENTH $@9 stmt

   95 $@10: %empty

   96 ifstmt: ifstmt ELSE $@10 stmt

   97 $@11: %empty

   98 $@12: %empty

   99 whilestmt: WHILE $@11 LEFT_PARENTH expr RIGHT_PARENTH $@12 stmt

  100 $@13: %empty

  101 $@14: %empty

  102 forstmt: FOR $@13 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@14 stmt

  103 returnstmt: RETURN SEMICOLON

  104 $@15: %empty

  105 returnstmt: RETURN $@15 expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <stringval> (258) 36 37 38 39 40 41 48 49 50 52 54 62 80 90 91
    STRING <stringval> (259) 86
    INTEGER <intval> (260) 84
    FLOAT <floatval> (261) 85
    IF <stringval> (262) 94
    ELSE <stringval> (263) 96
    WHILE <stringval> (264) 99
    FOR <stringval> (265) 102
    FUNCTION <stringval> (266) 80 83
    RETURN <stringval> (267) 103 105
    BREAK <stringval> (268) 8
    CONTINUE <stringval> (269) 9
    AND <stringval> (270) 25
    NOT <stringval> (271) 30
    OR <stringval> (272) 26
    LOCAL <stringval> (273) 37 40 49
    TRUE <stringval> (274) 88
    FALSE <stringval> (275) 89
    NIL <stringval> (276) 87
    ASSIGN <stringval> (277) 36 37 38 39 40 41 42
    PLUS <stringval> (278) 14
    MINUS <stringval> (279) 15 29
    MUL <stringval> (280) 16
    DIV <stringval> (281) 17
    MODULO <stringval> (282) 18
    EQUAL <stringval> (283) 23
    NOT_EQUAL <stringval> (284) 24
    PLUS_PLUS <stringval> (285) 31 32
    MINUS_MINUS <stringval> (286) 33 34
    GREATER <stringval> (287) 19
    LESS <stringval> (288) 21
    GREATER_EQUAL <stringval> (289) 20
    LESS_EQUAL <stringval> (290) 22
    LEFT_BRACE <stringval> (291) 72 77 80 83
    RIGHT_BRACE <stringval> (292) 72 77 80 83
    LEFT_BRACKET <stringval> (293) 53 55 66 67
    RIGHT_BRACKET <stringval> (294) 53 55 58 66 67
    LEFT_PARENTH <stringval> (295) 28 46 56 58 61 62 80 83 94 99 102
    RIGHT_PARENTH <stringval> (296) 28 46 56 58 61 62 80 83 94 99 102
    SEMICOLON <stringval> (297) 3 8 9 12 102 103 105
    COMMA <stringval> (298) 64 69 91
    COLON <stringval> (299) 72
    DOUBLE_COLON <stringval> (300) 38 41 50
    DOT <stringval> (301) 52 54
    DOT_DOT <stringval> (302) 62
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0 1
    stmt <stringval> (51)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 1 73 94 96 99 102
    expr <intval> (52)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 3 14 15 16 17 18 19 20 21 22 23 24 25 26 28 29 30 36 37 38 42 53 55 63 64 72 94 99 102 105
    term (53)
        on left: 28 29 30 31 32 33 34 35
        on right: 27
    assignexpr (54)
        on left: 36 37 38 39 40 41 42
        on right: 13
    primary <stringval> (55)
        on left: 43 44 45 46 47
        on right: 35
    lvalue <stringval> (56)
        on left: 48 49 50 51
        on right: 31 32 33 34 43 52 53 57
    member <stringval> (57)
        on left: 52 53 54 55
        on right: 42 51
    call <stringval> (58)
        on left: 56 57 58
        on right: 44 54 55 56
    callsuffix <stringval> (59)
        on left: 59 60
        on right: 57
    normcall <stringval> (60)
        on left: 61
        on right: 59
    methodcall <stringval> (61)
        on left: 62
        on right: 60
    elist <stringval> (62)
        on left: 63 64 65
        on right: 56 58 61 62 64 66 102
    objectdef <stringval> (63)
        on left: 66 67
        on right: 45
    indexed <stringval> (64)
        on left: 68 69
        on right: 67 69
    indexedelem <stringval> (65)
        on left: 72
        on right: 68 69
    $@1 (66)
        on left: 70
        on right: 72
    $@2 (67)
        on left: 71
        on right: 72
    temp_stmt <stringval> (68)
        on left: 73 74
        on right: 73 77 80 83
    block <stringval> (69)
        on left: 77
        on right: 10
    $@3 (70)
        on left: 75
        on right: 77
    $@4 (71)
        on left: 76
        on right: 77
    funcdef <stringval> (72)
        on left: 80 83
        on right: 11 39 40 41 46 58
    $@5 (73)
        on left: 78
        on right: 80
    $@6 (74)
        on left: 79
        on right: 80
    $@7 (75)
        on left: 81
        on right: 83
    $@8 (76)
        on left: 82
        on right: 83
    const <stringval> (77)
        on left: 84 85 86 87 88 89
        on right: 47
    idlist (78)
        on left: 90 91 92
        on right: 80 83 91
    ifstmt <stringval> (79)
        on left: 94 96
        on right: 4 96
    $@9 (80)
        on left: 93
        on right: 94
    $@10 (81)
        on left: 95
        on right: 96
    whilestmt <stringval> (82)
        on left: 99
        on right: 5
    $@11 (83)
        on left: 97
        on right: 99
    $@12 (84)
        on left: 98
        on right: 99
    forstmt <stringval> (85)
        on left: 102
        on right: 6
    $@13 (86)
        on left: 100
        on right: 102
    $@14 (87)
        on left: 101
        on right: 102
    returnstmt <stringval> (88)
        on left: 103 105
        on right: 7
    $@15 (89)
        on left: 104
        on right: 105


State 0

    0 $accept: . program $end

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 1

   36 assignexpr: ID . ASSIGN expr
   39           | ID . ASSIGN funcdef
   48 lvalue: ID .

    ASSIGN  shift, and go to state 42

    $default  reduce using rule 48 (lvalue)


State 2

   86 const: STRING .

    $default  reduce using rule 86 (const)


State 3

   84 const: INTEGER .

    $default  reduce using rule 84 (const)


State 4

   85 const: FLOAT .

    $default  reduce using rule 85 (const)


State 5

   94 ifstmt: IF . LEFT_PARENTH expr RIGHT_PARENTH $@9 stmt

    LEFT_PARENTH  shift, and go to state 43


State 6

   99 whilestmt: WHILE . $@11 LEFT_PARENTH expr RIGHT_PARENTH $@12 stmt

    $default  reduce using rule 97 ($@11)

    $@11  go to state 44


State 7

  102 forstmt: FOR . $@13 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@14 stmt

    $default  reduce using rule 100 ($@13)

    $@13  go to state 45


State 8

   80 funcdef: FUNCTION . ID $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE
   83        | FUNCTION . $@7 LEFT_PARENTH $@8 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    ID  shift, and go to state 46

    $default  reduce using rule 81 ($@7)

    $@7  go to state 47


State 9

  103 returnstmt: RETURN . SEMICOLON
  105           | RETURN . $@15 expr SEMICOLON

    SEMICOLON  shift, and go to state 48

    $default  reduce using rule 104 ($@15)

    $@15  go to state 49


State 10

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 11

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 12

   30 term: NOT . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 13

   37 assignexpr: LOCAL . ID ASSIGN expr
   40           | LOCAL . ID ASSIGN funcdef
   49 lvalue: LOCAL . ID

    ID  shift, and go to state 53


State 14

   88 const: TRUE .

    $default  reduce using rule 88 (const)


State 15

   89 const: FALSE .

    $default  reduce using rule 89 (const)


State 16

   87 const: NIL .

    $default  reduce using rule 87 (const)


State 17

   29 term: MINUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 54
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 18

   31 term: PLUS_PLUS . lvalue

    ID            shift, and go to state 55
    LOCAL         shift, and go to state 56
    LEFT_PARENTH  shift, and go to state 57
    DOUBLE_COLON  shift, and go to state 58

    lvalue  go to state 59
    member  go to state 60
    call    go to state 61


State 19

   33 term: MINUS_MINUS . lvalue

    ID            shift, and go to state 55
    LOCAL         shift, and go to state 56
    LEFT_PARENTH  shift, and go to state 57
    DOUBLE_COLON  shift, and go to state 58

    lvalue  go to state 62
    member  go to state 60
    call    go to state 61


State 20

   77 block: LEFT_BRACE . $@3 temp_stmt $@4 RIGHT_BRACE

    $default  reduce using rule 75 ($@3)

    $@3  go to state 63


State 21

   66 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   67          | LEFT_BRACKET . indexed RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 64
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr         go to state 65
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 66
    objectdef    go to state 34
    indexed      go to state 67
    indexedelem  go to state 68
    const        go to state 37


State 22

   28 term: LEFT_PARENTH . expr RIGHT_PARENTH
   46 primary: LEFT_PARENTH . funcdef RIGHT_PARENTH
   58 call: LEFT_PARENTH . funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 8
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 69
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 70
    const       go to state 37


State 23

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 24

   38 assignexpr: DOUBLE_COLON . ID ASSIGN expr
   41           | DOUBLE_COLON . ID ASSIGN funcdef
   50 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 71


State 25

    0 $accept: program . $end

    $end  shift, and go to state 72


State 26

    1 program: stmt . program

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 73
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 27

    3 stmt: expr . SEMICOLON
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    SEMICOLON      shift, and go to state 87


State 28

   27 expr: term .

    $default  reduce using rule 27 (expr)


State 29

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


State 30

   35 term: primary .

    $default  reduce using rule 35 (term)


State 31

   32 term: lvalue . PLUS_PLUS
   34     | lvalue . MINUS_MINUS
   43 primary: lvalue .
   52 member: lvalue . DOT ID
   53       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   57 call: lvalue . callsuffix

    PLUS_PLUS     shift, and go to state 88
    MINUS_MINUS   shift, and go to state 89
    LEFT_BRACKET  shift, and go to state 90
    LEFT_PARENTH  shift, and go to state 91
    DOT           shift, and go to state 92
    DOT_DOT       shift, and go to state 93

    $default  reduce using rule 43 (primary)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 32

   42 assignexpr: member . ASSIGN expr
   51 lvalue: member .

    ASSIGN  shift, and go to state 97

    $default  reduce using rule 51 (lvalue)


State 33

   44 primary: call .
   54 member: call . DOT ID
   55       | call . LEFT_BRACKET expr RIGHT_BRACKET
   56 call: call . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 98
    LEFT_PARENTH  shift, and go to state 99
    DOT           shift, and go to state 100

    $default  reduce using rule 44 (primary)


State 34

   45 primary: objectdef .

    $default  reduce using rule 45 (primary)


State 35

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 36

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 37

   47 primary: const .

    $default  reduce using rule 47 (primary)


State 38

    4 stmt: ifstmt .
   96 ifstmt: ifstmt . ELSE $@10 stmt

    ELSE  shift, and go to state 101

    ELSE      [reduce using rule 4 (stmt)]
    $default  reduce using rule 4 (stmt)


State 39

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 42

   36 assignexpr: ID ASSIGN . expr
   39           | ID ASSIGN . funcdef

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 8
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 102
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 103
    const       go to state 37


State 43

   94 ifstmt: IF LEFT_PARENTH . expr RIGHT_PARENTH $@9 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 104
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 44

   99 whilestmt: WHILE $@11 . LEFT_PARENTH expr RIGHT_PARENTH $@12 stmt

    LEFT_PARENTH  shift, and go to state 105


State 45

  102 forstmt: FOR $@13 . LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@14 stmt

    LEFT_PARENTH  shift, and go to state 106


State 46

   80 funcdef: FUNCTION ID . $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    $default  reduce using rule 78 ($@5)

    $@5  go to state 107


State 47

   83 funcdef: FUNCTION $@7 . LEFT_PARENTH $@8 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    LEFT_PARENTH  shift, and go to state 108


State 48

  103 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 103 (returnstmt)


State 49

  105 returnstmt: RETURN $@15 . expr SEMICOLON

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 109
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 50

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 51

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 52

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   30 term: NOT expr .

    $default  reduce using rule 30 (term)


State 53

   37 assignexpr: LOCAL ID . ASSIGN expr
   40           | LOCAL ID . ASSIGN funcdef
   49 lvalue: LOCAL ID .

    ASSIGN  shift, and go to state 110

    $default  reduce using rule 49 (lvalue)


State 54

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   29 term: MINUS expr .

    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    $default  reduce using rule 29 (term)


State 55

   48 lvalue: ID .

    $default  reduce using rule 48 (lvalue)


State 56

   49 lvalue: LOCAL . ID

    ID  shift, and go to state 111


State 57

   58 call: LEFT_PARENTH . funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

    FUNCTION  shift, and go to state 8

    funcdef  go to state 112


State 58

   50 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 113


State 59

   31 term: PLUS_PLUS lvalue .
   52 member: lvalue . DOT ID
   53       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   57 call: lvalue . callsuffix

    LEFT_BRACKET  shift, and go to state 90
    LEFT_PARENTH  shift, and go to state 91
    DOT           shift, and go to state 92
    DOT_DOT       shift, and go to state 93

    $default  reduce using rule 31 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 60

   51 lvalue: member .

    $default  reduce using rule 51 (lvalue)


State 61

   54 member: call . DOT ID
   55       | call . LEFT_BRACKET expr RIGHT_BRACKET
   56 call: call . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 98
    LEFT_PARENTH  shift, and go to state 99
    DOT           shift, and go to state 100


State 62

   33 term: MINUS_MINUS lvalue .
   52 member: lvalue . DOT ID
   53       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   57 call: lvalue . callsuffix

    LEFT_BRACKET  shift, and go to state 90
    LEFT_PARENTH  shift, and go to state 91
    DOT           shift, and go to state 92
    DOT_DOT       shift, and go to state 93

    $default  reduce using rule 33 (term)

    callsuffix  go to state 94
    normcall    go to state 95
    methodcall  go to state 96


State 63

   77 block: LEFT_BRACE $@3 . temp_stmt $@4 RIGHT_BRACE

    $default  reduce using rule 74 (temp_stmt)

    temp_stmt  go to state 114


State 64

   72 indexedelem: LEFT_BRACE . $@1 expr COLON $@2 expr RIGHT_BRACE

    $default  reduce using rule 70 ($@1)

    $@1  go to state 115


State 65

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   63 elist: expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 63 (elist)


State 66

   64 elist: elist . COMMA expr
   66 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 116
    COMMA          shift, and go to state 117


State 67

   67 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET
   69 indexed: indexed . COMMA indexedelem

    RIGHT_BRACKET  shift, and go to state 118
    COMMA          shift, and go to state 119


State 68

   68 indexed: indexedelem .

    $default  reduce using rule 68 (indexed)


State 69

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   28 term: LEFT_PARENTH expr . RIGHT_PARENTH

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    RIGHT_PARENTH  shift, and go to state 120


State 70

   46 primary: LEFT_PARENTH funcdef . RIGHT_PARENTH
   58 call: LEFT_PARENTH funcdef . RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

    RIGHT_PARENTH  shift, and go to state 121


State 71

   38 assignexpr: DOUBLE_COLON ID . ASSIGN expr
   41           | DOUBLE_COLON ID . ASSIGN funcdef
   50 lvalue: DOUBLE_COLON ID .

    ASSIGN  shift, and go to state 122

    $default  reduce using rule 50 (lvalue)


State 72

    0 $accept: program $end .

    $default  accept


State 73

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 74

   25 expr: expr AND . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   26 expr: expr OR . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   14 expr: expr PLUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   15 expr: expr MINUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   16 expr: expr MUL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   17 expr: expr DIV . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   18 expr: expr MODULO . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   23 expr: expr EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   24 expr: expr NOT_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

   19 expr: expr GREATER . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 84

   21 expr: expr LESS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 85

   20 expr: expr GREATER_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 134
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 86

   22 expr: expr LESS_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 135
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 87

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 88

   32 term: lvalue PLUS_PLUS .

    $default  reduce using rule 32 (term)


State 89

   34 term: lvalue MINUS_MINUS .

    $default  reduce using rule 34 (term)


State 90

   53 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 136
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 91

   61 normcall: LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 137
    objectdef   go to state 34
    const       go to state 37


State 92

   52 member: lvalue DOT . ID

    ID  shift, and go to state 138


State 93

   62 methodcall: DOT_DOT . ID LEFT_PARENTH elist RIGHT_PARENTH

    ID  shift, and go to state 139


State 94

   57 call: lvalue callsuffix .

    $default  reduce using rule 57 (call)


State 95

   59 callsuffix: normcall .

    $default  reduce using rule 59 (callsuffix)


State 96

   60 callsuffix: methodcall .

    $default  reduce using rule 60 (callsuffix)


State 97

   42 assignexpr: member ASSIGN . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 140
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 98

   55 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 141
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 99

   56 call: call LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 142
    objectdef   go to state 34
    const       go to state 37


State 100

   54 member: call DOT . ID

    ID  shift, and go to state 143


State 101

   96 ifstmt: ifstmt ELSE . $@10 stmt

    $default  reduce using rule 95 ($@10)

    $@10  go to state 144


State 102

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   36 assignexpr: ID ASSIGN expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 36 (assignexpr)


State 103

   39 assignexpr: ID ASSIGN funcdef .

    $default  reduce using rule 39 (assignexpr)


State 104

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   94 ifstmt: IF LEFT_PARENTH expr . RIGHT_PARENTH $@9 stmt

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    RIGHT_PARENTH  shift, and go to state 145


State 105

   99 whilestmt: WHILE $@11 LEFT_PARENTH . expr RIGHT_PARENTH $@12 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 146
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 106

  102 forstmt: FOR $@13 LEFT_PARENTH . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@14 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 147
    objectdef   go to state 34
    const       go to state 37


State 107

   80 funcdef: FUNCTION ID $@5 . LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    LEFT_PARENTH  shift, and go to state 148


State 108

   83 funcdef: FUNCTION $@7 LEFT_PARENTH . $@8 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    $default  reduce using rule 82 ($@8)

    $@8  go to state 149


State 109

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
  105 returnstmt: RETURN $@15 expr . SEMICOLON

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    SEMICOLON      shift, and go to state 150


State 110

   37 assignexpr: LOCAL ID ASSIGN . expr
   40           | LOCAL ID ASSIGN . funcdef

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 8
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 151
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 152
    const       go to state 37


State 111

   49 lvalue: LOCAL ID .

    $default  reduce using rule 49 (lvalue)


State 112

   58 call: LEFT_PARENTH funcdef . RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

    RIGHT_PARENTH  shift, and go to state 153


State 113

   50 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 50 (lvalue)


State 114

   73 temp_stmt: temp_stmt . stmt
   77 block: LEFT_BRACE $@3 temp_stmt . $@4 RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 76 ($@4)

    stmt        go to state 154
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    $@4         go to state 155
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 115

   72 indexedelem: LEFT_BRACE $@1 . expr COLON $@2 expr RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 156
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 116

   66 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 66 (objectdef)


State 117

   64 elist: elist COMMA . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 157
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 118

   67 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 67 (objectdef)


State 119

   69 indexed: indexed COMMA . indexedelem

    LEFT_BRACE  shift, and go to state 64

    indexedelem  go to state 158


State 120

   28 term: LEFT_PARENTH expr RIGHT_PARENTH .

    $default  reduce using rule 28 (term)


State 121

   46 primary: LEFT_PARENTH funcdef RIGHT_PARENTH .
   58 call: LEFT_PARENTH funcdef RIGHT_PARENTH . LEFT_PARENTH elist RIGHT_BRACKET

    LEFT_PARENTH  shift, and go to state 159

    $default  reduce using rule 46 (primary)


State 122

   38 assignexpr: DOUBLE_COLON ID ASSIGN . expr
   41           | DOUBLE_COLON ID ASSIGN . funcdef

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 8
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 160
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 161
    const       go to state 37


State 123

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 25 (expr)


State 124

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .

    AND            shift, and go to state 74
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 26 (expr)


State 125

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    $default  reduce using rule 14 (expr)


State 126

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    $default  reduce using rule 15 (expr)


State 127

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   16     | expr MUL expr .
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 16 (expr)


State 128

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 129

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   18     | expr MODULO expr .
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 130

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   23     | expr EQUAL expr .
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 131

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   24     | expr NOT_EQUAL expr .
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 132

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   19     | expr GREATER expr .
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 76
    MINUS   shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 19 (expr)


State 133

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   21     | expr LESS expr .
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 76
    MINUS   shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 134

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   20     | expr GREATER_EQUAL expr .
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 76
    MINUS   shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 135

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   22     | expr LESS_EQUAL expr .
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 76
    MINUS   shift, and go to state 77
    MUL     shift, and go to state 78
    DIV     shift, and go to state 79
    MODULO  shift, and go to state 80

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 136

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   53 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    RIGHT_BRACKET  shift, and go to state 162


State 137

   61 normcall: LEFT_PARENTH elist . RIGHT_PARENTH
   64 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 163
    COMMA          shift, and go to state 117


State 138

   52 member: lvalue DOT ID .

    $default  reduce using rule 52 (member)


State 139

   62 methodcall: DOT_DOT ID . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 164


State 140

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   42 assignexpr: member ASSIGN expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 42 (assignexpr)


State 141

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   55 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    RIGHT_BRACKET  shift, and go to state 165


State 142

   56 call: call LEFT_PARENTH elist . RIGHT_PARENTH
   64 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 166
    COMMA          shift, and go to state 117


State 143

   54 member: call DOT ID .

    $default  reduce using rule 54 (member)


State 144

   96 ifstmt: ifstmt ELSE $@10 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 167
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 145

   94 ifstmt: IF LEFT_PARENTH expr RIGHT_PARENTH . $@9 stmt

    $default  reduce using rule 93 ($@9)

    $@9  go to state 168


State 146

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   99 whilestmt: WHILE $@11 LEFT_PARENTH expr . RIGHT_PARENTH $@12 stmt

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    RIGHT_PARENTH  shift, and go to state 169


State 147

   64 elist: elist . COMMA expr
  102 forstmt: FOR $@13 LEFT_PARENTH elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@14 stmt

    SEMICOLON  shift, and go to state 170
    COMMA      shift, and go to state 117


State 148

   80 funcdef: FUNCTION ID $@5 LEFT_PARENTH . $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    $default  reduce using rule 79 ($@6)

    $@6  go to state 171


State 149

   83 funcdef: FUNCTION $@7 LEFT_PARENTH $@8 . idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    ID  shift, and go to state 172

    $default  reduce using rule 92 (idlist)

    idlist  go to state 173


State 150

  105 returnstmt: RETURN $@15 expr SEMICOLON .

    $default  reduce using rule 105 (returnstmt)


State 151

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   37 assignexpr: LOCAL ID ASSIGN expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 37 (assignexpr)


State 152

   40 assignexpr: LOCAL ID ASSIGN funcdef .

    $default  reduce using rule 40 (assignexpr)


State 153

   58 call: LEFT_PARENTH funcdef RIGHT_PARENTH . LEFT_PARENTH elist RIGHT_BRACKET

    LEFT_PARENTH  shift, and go to state 159


State 154

   73 temp_stmt: temp_stmt stmt .

    $default  reduce using rule 73 (temp_stmt)


State 155

   77 block: LEFT_BRACE $@3 temp_stmt $@4 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 174


State 156

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   72 indexedelem: LEFT_BRACE $@1 expr . COLON $@2 expr RIGHT_BRACE

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    COLON          shift, and go to state 175


State 157

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   64 elist: elist COMMA expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 64 (elist)


State 158

   69 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 69 (indexed)


State 159

   58 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH . elist RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 176
    objectdef   go to state 34
    const       go to state 37


State 160

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   38 assignexpr: DOUBLE_COLON ID ASSIGN expr .

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86

    $default  reduce using rule 38 (assignexpr)


State 161

   41 assignexpr: DOUBLE_COLON ID ASSIGN funcdef .

    $default  reduce using rule 41 (assignexpr)


State 162

   53 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 53 (member)


State 163

   61 normcall: LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 61 (normcall)


State 164

   62 methodcall: DOT_DOT ID LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 177
    objectdef   go to state 34
    const       go to state 37


State 165

   55 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 55 (member)


State 166

   56 call: call LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 56 (call)


State 167

   96 ifstmt: ifstmt ELSE $@10 stmt .

    $default  reduce using rule 96 (ifstmt)


State 168

   94 ifstmt: IF LEFT_PARENTH expr RIGHT_PARENTH $@9 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 178
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 169

   99 whilestmt: WHILE $@11 LEFT_PARENTH expr RIGHT_PARENTH . $@12 stmt

    $default  reduce using rule 98 ($@12)

    $@12  go to state 179


State 170

  102 forstmt: FOR $@13 LEFT_PARENTH elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTH $@14 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 180
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 171

   80 funcdef: FUNCTION ID $@5 LEFT_PARENTH $@6 . idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    ID  shift, and go to state 172

    $default  reduce using rule 92 (idlist)

    idlist  go to state 181


State 172

   90 idlist: ID .

    $default  reduce using rule 90 (idlist)


State 173

   83 funcdef: FUNCTION $@7 LEFT_PARENTH $@8 idlist . RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE
   91 idlist: idlist . COMMA ID

    RIGHT_PARENTH  shift, and go to state 182
    COMMA          shift, and go to state 183


State 174

   77 block: LEFT_BRACE $@3 temp_stmt $@4 RIGHT_BRACE .

    $default  reduce using rule 77 (block)


State 175

   72 indexedelem: LEFT_BRACE $@1 expr COLON . $@2 expr RIGHT_BRACE

    $default  reduce using rule 71 ($@2)

    $@2  go to state 184


State 176

   58 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist . RIGHT_BRACKET
   64 elist: elist . COMMA expr

    RIGHT_BRACKET  shift, and go to state 185
    COMMA          shift, and go to state 117


State 177

   62 methodcall: DOT_DOT ID LEFT_PARENTH elist . RIGHT_PARENTH
   64 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 186
    COMMA          shift, and go to state 117


State 178

   94 ifstmt: IF LEFT_PARENTH expr RIGHT_PARENTH $@9 stmt .

    $default  reduce using rule 94 (ifstmt)


State 179

   99 whilestmt: WHILE $@11 LEFT_PARENTH expr RIGHT_PARENTH $@12 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 187
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 180

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
  102 forstmt: FOR $@13 LEFT_PARENTH elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTH $@14 stmt

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    SEMICOLON      shift, and go to state 188


State 181

   80 funcdef: FUNCTION ID $@5 LEFT_PARENTH $@6 idlist . RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE
   91 idlist: idlist . COMMA ID

    RIGHT_PARENTH  shift, and go to state 189
    COMMA          shift, and go to state 183


State 182

   83 funcdef: FUNCTION $@7 LEFT_PARENTH $@8 idlist RIGHT_PARENTH . LEFT_BRACE temp_stmt RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 190


State 183

   91 idlist: idlist COMMA . ID

    ID  shift, and go to state 191


State 184

   72 indexedelem: LEFT_BRACE $@1 expr COLON $@2 . expr RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 192
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 185

   58 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET .

    $default  reduce using rule 58 (call)


State 186

   62 methodcall: DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 62 (methodcall)


State 187

   99 whilestmt: WHILE $@11 LEFT_PARENTH expr RIGHT_PARENTH $@12 stmt .

    $default  reduce using rule 99 (whilestmt)


State 188

  102 forstmt: FOR $@13 LEFT_PARENTH elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTH $@14 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 65 (elist)

    expr        go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 193
    objectdef   go to state 34
    const       go to state 37


State 189

   80 funcdef: FUNCTION ID $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH . LEFT_BRACE temp_stmt RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 194


State 190

   83 funcdef: FUNCTION $@7 LEFT_PARENTH $@8 idlist RIGHT_PARENTH LEFT_BRACE . temp_stmt RIGHT_BRACE

    $default  reduce using rule 74 (temp_stmt)

    temp_stmt  go to state 195


State 191

   91 idlist: idlist COMMA ID .

    $default  reduce using rule 91 (idlist)


State 192

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   72 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr . RIGHT_BRACE

    AND            shift, and go to state 74
    OR             shift, and go to state 75
    PLUS           shift, and go to state 76
    MINUS          shift, and go to state 77
    MUL            shift, and go to state 78
    DIV            shift, and go to state 79
    MODULO         shift, and go to state 80
    EQUAL          shift, and go to state 81
    NOT_EQUAL      shift, and go to state 82
    GREATER        shift, and go to state 83
    LESS           shift, and go to state 84
    GREATER_EQUAL  shift, and go to state 85
    LESS_EQUAL     shift, and go to state 86
    RIGHT_BRACE    shift, and go to state 196


State 193

   64 elist: elist . COMMA expr
  102 forstmt: FOR $@13 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTH $@14 stmt

    RIGHT_PARENTH  shift, and go to state 197
    COMMA          shift, and go to state 117


State 194

   80 funcdef: FUNCTION ID $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE . temp_stmt RIGHT_BRACE

    $default  reduce using rule 74 (temp_stmt)

    temp_stmt  go to state 198


State 195

   73 temp_stmt: temp_stmt . stmt
   83 funcdef: FUNCTION $@7 LEFT_PARENTH $@8 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt . RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    RIGHT_BRACE   shift, and go to state 199
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 154
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 196

   72 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr RIGHT_BRACE .

    $default  reduce using rule 72 (indexedelem)


State 197

  102 forstmt: FOR $@13 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH . $@14 stmt

    $default  reduce using rule 101 ($@14)

    $@14  go to state 200


State 198

   73 temp_stmt: temp_stmt . stmt
   80 funcdef: FUNCTION ID $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt . RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    RIGHT_BRACE   shift, and go to state 201
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 154
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 199

   83 funcdef: FUNCTION $@7 LEFT_PARENTH $@8 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE .

    $default  reduce using rule 83 (funcdef)


State 200

  102 forstmt: FOR $@13 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@14 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 202
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 201

   80 funcdef: FUNCTION ID $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE .

    $default  reduce using rule 80 (funcdef)


State 202

  102 forstmt: FOR $@13 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@14 stmt .

    $default  reduce using rule 102 (forstmt)
