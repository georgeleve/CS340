Terminals unused in grammar

    UMINUS


State 38 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr MUL expr
   17     | expr DIV expr
   18     | expr MODULO expr
   19     | expr GREATER expr
   20     | expr GREATER_EQUAL expr
   21     | expr LESS expr
   22     | expr LESS_EQUAL expr
   23     | expr EQUAL expr
   24     | expr NOT_EQUAL expr
   25     | expr AND expr
   26     | expr OR expr
   27     | term

   28 term: LEFT_PARENTH expr RIGHT_PARENTH
   29     | MINUS expr
   30     | NOT expr
   31     | PLUS_PLUS lvalue
   32     | lvalue PLUS_PLUS
   33     | MINUS_MINUS lvalue
   34     | lvalue MINUS_MINUS
   35     | primary

   36 assignexpr: ID ASSIGN expr
   37           | LOCAL ID ASSIGN expr
   38           | DOUBLE_COLON ID ASSIGN expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_PARENTH funcdef RIGHT_PARENTH
   43        | const

   44 lvalue: ID
   45       | LOCAL ID
   46       | DOUBLE_COLON ID
   47       | member

   48 member: lvalue DOT ID
   49       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   50       | call DOT ID
   51       | call LEFT_BRACKET expr RIGHT_BRACKET

   52 call: call LEFT_PARENTH elist RIGHT_PARENTH
   53     | lvalue callsuffix
   54     | LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

   55 callsuffix: normcall
   56           | methodcall

   57 normcall: LEFT_PARENTH elist RIGHT_PARENTH

   58 methodcall: DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH

   59 elist: expr
   60      | elist COMMA expr
   61      | %empty

   62 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   63          | LEFT_BRACKET indexed RIGHT_BRACKET

   64 indexed: indexedelem
   65        | indexed COMMA indexedelem

   66 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE

   67 temp_stmt: temp_stmt stmt
   68          | %empty

   69 $@1: %empty

   70 $@2: %empty

   71 block: LEFT_BRACE $@1 temp_stmt $@2 RIGHT_BRACE

   72 $@3: %empty

   73 $@4: %empty

   74 funcdef: FUNCTION ID $@3 LEFT_PARENTH $@4 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

   75 $@5: %empty

   76 $@6: %empty

   77 funcdef: FUNCTION $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

   78 const: INTEGER
   79      | FLOAT
   80      | STRING
   81      | NIL
   82      | TRUE
   83      | FALSE

   84 idlist: ID
   85       | idlist COMMA ID
   86       | %empty

   87 $@7: %empty

   88 ifstmt: IF LEFT_PARENTH expr RIGHT_PARENTH $@7 stmt

   89 $@8: %empty

   90 ifstmt: ifstmt ELSE $@8 stmt

   91 $@9: %empty

   92 $@10: %empty

   93 whilestmt: WHILE $@9 LEFT_PARENTH expr RIGHT_PARENTH $@10 stmt

   94 $@11: %empty

   95 $@12: %empty

   96 forstmt: FOR $@11 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@12 stmt

   97 returnstmt: RETURN SEMICOLON

   98 $@13: %empty

   99 returnstmt: RETURN $@13 expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <stringval> (258) 36 37 38 44 45 46 48 50 58 74 84 85
    STRING <stringval> (259) 80
    INTEGER <intval> (260) 78
    FLOAT <floatval> (261) 79
    IF <stringval> (262) 88
    ELSE <stringval> (263) 90
    WHILE <stringval> (264) 93
    FOR <stringval> (265) 96
    FUNCTION <stringval> (266) 74 77
    RETURN <stringval> (267) 97 99
    BREAK <stringval> (268) 8
    CONTINUE <stringval> (269) 9
    AND <stringval> (270) 25
    NOT <stringval> (271) 30
    OR <stringval> (272) 26
    LOCAL <stringval> (273) 37 45
    TRUE <stringval> (274) 82
    FALSE <stringval> (275) 83
    NIL <stringval> (276) 81
    ASSIGN <stringval> (277) 36 37 38
    PLUS <stringval> (278) 14
    MINUS <stringval> (279) 15 29
    MUL <stringval> (280) 16
    DIV <stringval> (281) 17
    MODULO <stringval> (282) 18
    EQUAL <stringval> (283) 23
    NOT_EQUAL <stringval> (284) 24
    PLUS_PLUS <stringval> (285) 31 32
    MINUS_MINUS <stringval> (286) 33 34
    GREATER <stringval> (287) 19
    LESS <stringval> (288) 21
    GREATER_EQUAL <stringval> (289) 20
    LESS_EQUAL <stringval> (290) 22
    LEFT_BRACE <stringval> (291) 66 71 74 77
    RIGHT_BRACE <stringval> (292) 66 71 74 77
    LEFT_BRACKET <stringval> (293) 49 51 62 63
    RIGHT_BRACKET <stringval> (294) 49 51 54 62 63
    LEFT_PARENTH <stringval> (295) 28 42 52 54 57 58 74 77 88 93 96
    RIGHT_PARENTH <stringval> (296) 28 42 52 54 57 58 74 77 88 93 96
    SEMICOLON <stringval> (297) 3 8 9 12 96 97 99
    COMMA <stringval> (298) 60 65 85
    COLON <stringval> (299) 66
    DOUBLE_COLON <stringval> (300) 38 46
    DOT <stringval> (301) 48 50
    DOT_DOT <stringval> (302) 58
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0 1
    stmt <stringval> (51)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 1 67 88 90 93 96
    expr <intval> (52)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 3 14 15 16 17 18 19 20 21 22 23 24 25 26 28 29 30 36 37 38 49 51 59 60 66 88 93 96 99
    term (53)
        on left: 28 29 30 31 32 33 34 35
        on right: 27
    assignexpr (54)
        on left: 36 37 38
        on right: 13
    primary <stringval> (55)
        on left: 39 40 41 42 43
        on right: 35
    lvalue <stringval> (56)
        on left: 44 45 46 47
        on right: 31 32 33 34 39 48 49 53
    member <stringval> (57)
        on left: 48 49 50 51
        on right: 47
    call <stringval> (58)
        on left: 52 53 54
        on right: 40 50 51 52
    callsuffix <stringval> (59)
        on left: 55 56
        on right: 53
    normcall <stringval> (60)
        on left: 57
        on right: 55
    methodcall <stringval> (61)
        on left: 58
        on right: 56
    elist <stringval> (62)
        on left: 59 60 61
        on right: 52 54 57 58 60 62 96
    objectdef <stringval> (63)
        on left: 62 63
        on right: 41
    indexed <stringval> (64)
        on left: 64 65
        on right: 63 65
    indexedelem <stringval> (65)
        on left: 66
        on right: 64 65
    temp_stmt <stringval> (66)
        on left: 67 68
        on right: 67 71 74 77
    block <stringval> (67)
        on left: 71
        on right: 10
    $@1 (68)
        on left: 69
        on right: 71
    $@2 (69)
        on left: 70
        on right: 71
    funcdef <stringval> (70)
        on left: 74 77
        on right: 11 42 54
    $@3 (71)
        on left: 72
        on right: 74
    $@4 (72)
        on left: 73
        on right: 74
    $@5 (73)
        on left: 75
        on right: 77
    $@6 (74)
        on left: 76
        on right: 77
    const <stringval> (75)
        on left: 78 79 80 81 82 83
        on right: 43
    idlist (76)
        on left: 84 85 86
        on right: 74 77 85
    ifstmt <stringval> (77)
        on left: 88 90
        on right: 4 90
    $@7 (78)
        on left: 87
        on right: 88
    $@8 (79)
        on left: 89
        on right: 90
    whilestmt <stringval> (80)
        on left: 93
        on right: 5
    $@9 (81)
        on left: 91
        on right: 93
    $@10 (82)
        on left: 92
        on right: 93
    forstmt <stringval> (83)
        on left: 96
        on right: 6
    $@11 (84)
        on left: 94
        on right: 96
    $@12 (85)
        on left: 95
        on right: 96
    returnstmt <stringval> (86)
        on left: 97 99
        on right: 7
    $@13 (87)
        on left: 98
        on right: 99


State 0

    0 $accept: . program $end

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 1

   36 assignexpr: ID . ASSIGN expr
   44 lvalue: ID .

    ASSIGN  shift, and go to state 42

    $default  reduce using rule 44 (lvalue)


State 2

   80 const: STRING .

    $default  reduce using rule 80 (const)


State 3

   78 const: INTEGER .

    $default  reduce using rule 78 (const)


State 4

   79 const: FLOAT .

    $default  reduce using rule 79 (const)


State 5

   88 ifstmt: IF . LEFT_PARENTH expr RIGHT_PARENTH $@7 stmt

    LEFT_PARENTH  shift, and go to state 43


State 6

   93 whilestmt: WHILE . $@9 LEFT_PARENTH expr RIGHT_PARENTH $@10 stmt

    $default  reduce using rule 91 ($@9)

    $@9  go to state 44


State 7

   96 forstmt: FOR . $@11 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@12 stmt

    $default  reduce using rule 94 ($@11)

    $@11  go to state 45


State 8

   74 funcdef: FUNCTION . ID $@3 LEFT_PARENTH $@4 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE
   77        | FUNCTION . $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    ID  shift, and go to state 46

    $default  reduce using rule 75 ($@5)

    $@5  go to state 47


State 9

   97 returnstmt: RETURN . SEMICOLON
   99           | RETURN . $@13 expr SEMICOLON

    SEMICOLON  shift, and go to state 48

    $default  reduce using rule 98 ($@13)

    $@13  go to state 49


State 10

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 11

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 12

   30 term: NOT . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 13

   37 assignexpr: LOCAL . ID ASSIGN expr
   45 lvalue: LOCAL . ID

    ID  shift, and go to state 53


State 14

   82 const: TRUE .

    $default  reduce using rule 82 (const)


State 15

   83 const: FALSE .

    $default  reduce using rule 83 (const)


State 16

   81 const: NIL .

    $default  reduce using rule 81 (const)


State 17

   29 term: MINUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 54
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 18

   31 term: PLUS_PLUS . lvalue

    ID            shift, and go to state 55
    LOCAL         shift, and go to state 56
    LEFT_PARENTH  shift, and go to state 57
    DOUBLE_COLON  shift, and go to state 58

    lvalue  go to state 59
    member  go to state 32
    call    go to state 60


State 19

   33 term: MINUS_MINUS . lvalue

    ID            shift, and go to state 55
    LOCAL         shift, and go to state 56
    LEFT_PARENTH  shift, and go to state 57
    DOUBLE_COLON  shift, and go to state 58

    lvalue  go to state 61
    member  go to state 32
    call    go to state 60


State 20

   71 block: LEFT_BRACE . $@1 temp_stmt $@2 RIGHT_BRACE

    $default  reduce using rule 69 ($@1)

    $@1  go to state 62


State 21

   62 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   63          | LEFT_BRACKET . indexed RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 63
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr         go to state 64
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 65
    objectdef    go to state 34
    indexed      go to state 66
    indexedelem  go to state 67
    const        go to state 37


State 22

   28 term: LEFT_PARENTH . expr RIGHT_PARENTH
   42 primary: LEFT_PARENTH . funcdef RIGHT_PARENTH
   54 call: LEFT_PARENTH . funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 8
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 68
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 69
    const       go to state 37


State 23

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 24

   38 assignexpr: DOUBLE_COLON . ID ASSIGN expr
   46 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 70


State 25

    0 $accept: program . $end

    $end  shift, and go to state 71


State 26

    1 program: stmt . program

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 72
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 27

    3 stmt: expr . SEMICOLON
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 86


State 28

   27 expr: term .

    $default  reduce using rule 27 (expr)


State 29

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


State 30

   35 term: primary .

    $default  reduce using rule 35 (term)


State 31

   32 term: lvalue . PLUS_PLUS
   34     | lvalue . MINUS_MINUS
   39 primary: lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   53 call: lvalue . callsuffix

    PLUS_PLUS     shift, and go to state 87
    MINUS_MINUS   shift, and go to state 88
    LEFT_BRACKET  shift, and go to state 89
    LEFT_PARENTH  shift, and go to state 90
    DOT           shift, and go to state 91
    DOT_DOT       shift, and go to state 92

    $default  reduce using rule 39 (primary)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 32

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 33

   40 primary: call .
   50 member: call . DOT ID
   51       | call . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: call . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 96
    LEFT_PARENTH  shift, and go to state 97
    DOT           shift, and go to state 98

    $default  reduce using rule 40 (primary)


State 34

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 35

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 36

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 37

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 38

    4 stmt: ifstmt .
   90 ifstmt: ifstmt . ELSE $@8 stmt

    ELSE  shift, and go to state 99

    ELSE      [reduce using rule 4 (stmt)]
    $default  reduce using rule 4 (stmt)


State 39

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 40

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 41

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 42

   36 assignexpr: ID ASSIGN . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 100
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 43

   88 ifstmt: IF LEFT_PARENTH . expr RIGHT_PARENTH $@7 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 101
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 44

   93 whilestmt: WHILE $@9 . LEFT_PARENTH expr RIGHT_PARENTH $@10 stmt

    LEFT_PARENTH  shift, and go to state 102


State 45

   96 forstmt: FOR $@11 . LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@12 stmt

    LEFT_PARENTH  shift, and go to state 103


State 46

   74 funcdef: FUNCTION ID . $@3 LEFT_PARENTH $@4 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    $default  reduce using rule 72 ($@3)

    $@3  go to state 104


State 47

   77 funcdef: FUNCTION $@5 . LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    LEFT_PARENTH  shift, and go to state 105


State 48

   97 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 97 (returnstmt)


State 49

   99 returnstmt: RETURN $@13 . expr SEMICOLON

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 106
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 50

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 51

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 52

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   30 term: NOT expr .

    $default  reduce using rule 30 (term)


State 53

   37 assignexpr: LOCAL ID . ASSIGN expr
   45 lvalue: LOCAL ID .

    ASSIGN  shift, and go to state 107

    $default  reduce using rule 45 (lvalue)


State 54

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   29 term: MINUS expr .

    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    $default  reduce using rule 29 (term)


State 55

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 56

   45 lvalue: LOCAL . ID

    ID  shift, and go to state 108


State 57

   54 call: LEFT_PARENTH . funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

    FUNCTION  shift, and go to state 8

    funcdef  go to state 109


State 58

   46 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 110


State 59

   31 term: PLUS_PLUS lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   53 call: lvalue . callsuffix

    LEFT_BRACKET  shift, and go to state 89
    LEFT_PARENTH  shift, and go to state 90
    DOT           shift, and go to state 91
    DOT_DOT       shift, and go to state 92

    $default  reduce using rule 31 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 60

   50 member: call . DOT ID
   51       | call . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: call . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 96
    LEFT_PARENTH  shift, and go to state 97
    DOT           shift, and go to state 98


State 61

   33 term: MINUS_MINUS lvalue .
   48 member: lvalue . DOT ID
   49       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   53 call: lvalue . callsuffix

    LEFT_BRACKET  shift, and go to state 89
    LEFT_PARENTH  shift, and go to state 90
    DOT           shift, and go to state 91
    DOT_DOT       shift, and go to state 92

    $default  reduce using rule 33 (term)

    callsuffix  go to state 93
    normcall    go to state 94
    methodcall  go to state 95


State 62

   71 block: LEFT_BRACE $@1 . temp_stmt $@2 RIGHT_BRACE

    $default  reduce using rule 68 (temp_stmt)

    temp_stmt  go to state 111


State 63

   66 indexedelem: LEFT_BRACE . expr COLON expr RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 112
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 64

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   59 elist: expr .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 59 (elist)


State 65

   60 elist: elist . COMMA expr
   62 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 113
    COMMA          shift, and go to state 114


State 66

   63 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET
   65 indexed: indexed . COMMA indexedelem

    RIGHT_BRACKET  shift, and go to state 115
    COMMA          shift, and go to state 116


State 67

   64 indexed: indexedelem .

    $default  reduce using rule 64 (indexed)


State 68

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   28 term: LEFT_PARENTH expr . RIGHT_PARENTH

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_PARENTH  shift, and go to state 117


State 69

   42 primary: LEFT_PARENTH funcdef . RIGHT_PARENTH
   54 call: LEFT_PARENTH funcdef . RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

    RIGHT_PARENTH  shift, and go to state 118


State 70

   38 assignexpr: DOUBLE_COLON ID . ASSIGN expr
   46 lvalue: DOUBLE_COLON ID .

    ASSIGN  shift, and go to state 119

    $default  reduce using rule 46 (lvalue)


State 71

    0 $accept: program $end .

    $default  accept


State 72

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 73

   25 expr: expr AND . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 74

   26 expr: expr OR . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 75

   14 expr: expr PLUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 76

   15 expr: expr MINUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 123
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 77

   16 expr: expr MUL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 78

   17 expr: expr DIV . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 125
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 79

   18 expr: expr MODULO . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 126
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 80

   23 expr: expr EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 127
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 81

   24 expr: expr NOT_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 82

   19 expr: expr GREATER . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 129
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 83

   21 expr: expr LESS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 130
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 84

   20 expr: expr GREATER_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 131
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 85

   22 expr: expr LESS_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 132
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 86

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 87

   32 term: lvalue PLUS_PLUS .

    $default  reduce using rule 32 (term)


State 88

   34 term: lvalue MINUS_MINUS .

    $default  reduce using rule 34 (term)


State 89

   49 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 133
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 90

   57 normcall: LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 134
    objectdef   go to state 34
    const       go to state 37


State 91

   48 member: lvalue DOT . ID

    ID  shift, and go to state 135


State 92

   58 methodcall: DOT_DOT . ID LEFT_PARENTH elist RIGHT_PARENTH

    ID  shift, and go to state 136


State 93

   53 call: lvalue callsuffix .

    $default  reduce using rule 53 (call)


State 94

   55 callsuffix: normcall .

    $default  reduce using rule 55 (callsuffix)


State 95

   56 callsuffix: methodcall .

    $default  reduce using rule 56 (callsuffix)


State 96

   51 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 137
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 97

   52 call: call LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 138
    objectdef   go to state 34
    const       go to state 37


State 98

   50 member: call DOT . ID

    ID  shift, and go to state 139


State 99

   90 ifstmt: ifstmt ELSE . $@8 stmt

    $default  reduce using rule 89 ($@8)

    $@8  go to state 140


State 100

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   36 assignexpr: ID ASSIGN expr .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 36 (assignexpr)


State 101

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   88 ifstmt: IF LEFT_PARENTH expr . RIGHT_PARENTH $@7 stmt

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_PARENTH  shift, and go to state 141


State 102

   93 whilestmt: WHILE $@9 LEFT_PARENTH . expr RIGHT_PARENTH $@10 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 142
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 103

   96 forstmt: FOR $@11 LEFT_PARENTH . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@12 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 143
    objectdef   go to state 34
    const       go to state 37


State 104

   74 funcdef: FUNCTION ID $@3 . LEFT_PARENTH $@4 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    LEFT_PARENTH  shift, and go to state 144


State 105

   77 funcdef: FUNCTION $@5 LEFT_PARENTH . $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    $default  reduce using rule 76 ($@6)

    $@6  go to state 145


State 106

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   99 returnstmt: RETURN $@13 expr . SEMICOLON

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 146


State 107

   37 assignexpr: LOCAL ID ASSIGN . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 147
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 108

   45 lvalue: LOCAL ID .

    $default  reduce using rule 45 (lvalue)


State 109

   54 call: LEFT_PARENTH funcdef . RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET

    RIGHT_PARENTH  shift, and go to state 148


State 110

   46 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 46 (lvalue)


State 111

   67 temp_stmt: temp_stmt . stmt
   71 block: LEFT_BRACE $@1 temp_stmt . $@2 RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 70 ($@2)

    stmt        go to state 149
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    $@2         go to state 150
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 112

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   66 indexedelem: LEFT_BRACE expr . COLON expr RIGHT_BRACE

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    COLON          shift, and go to state 151


State 113

   62 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 62 (objectdef)


State 114

   60 elist: elist COMMA . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 152
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 115

   63 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 63 (objectdef)


State 116

   65 indexed: indexed COMMA . indexedelem

    LEFT_BRACE  shift, and go to state 63

    indexedelem  go to state 153


State 117

   28 term: LEFT_PARENTH expr RIGHT_PARENTH .

    $default  reduce using rule 28 (term)


State 118

   42 primary: LEFT_PARENTH funcdef RIGHT_PARENTH .
   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH . LEFT_PARENTH elist RIGHT_BRACKET

    LEFT_PARENTH  shift, and go to state 154

    $default  reduce using rule 42 (primary)


State 119

   38 assignexpr: DOUBLE_COLON ID ASSIGN . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 155
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 120

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 25 (expr)


State 121

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .

    AND            shift, and go to state 73
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 26 (expr)


State 122

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    $default  reduce using rule 14 (expr)


State 123

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    $default  reduce using rule 15 (expr)


State 124

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   16     | expr MUL expr .
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 16 (expr)


State 125

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 126

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   18     | expr MODULO expr .
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 127

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   23     | expr EQUAL expr .
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 128

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   24     | expr NOT_EQUAL expr .
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 129

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   19     | expr GREATER expr .
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 75
    MINUS   shift, and go to state 76
    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 19 (expr)


State 130

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   21     | expr LESS expr .
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 75
    MINUS   shift, and go to state 76
    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 131

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   20     | expr GREATER_EQUAL expr .
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 75
    MINUS   shift, and go to state 76
    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 132

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   22     | expr LESS_EQUAL expr .
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 75
    MINUS   shift, and go to state 76
    MUL     shift, and go to state 77
    DIV     shift, and go to state 78
    MODULO  shift, and go to state 79

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 133

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   49 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_BRACKET  shift, and go to state 156


State 134

   57 normcall: LEFT_PARENTH elist . RIGHT_PARENTH
   60 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 157
    COMMA          shift, and go to state 114


State 135

   48 member: lvalue DOT ID .

    $default  reduce using rule 48 (member)


State 136

   58 methodcall: DOT_DOT ID . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 158


State 137

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   51 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_BRACKET  shift, and go to state 159


State 138

   52 call: call LEFT_PARENTH elist . RIGHT_PARENTH
   60 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 160
    COMMA          shift, and go to state 114


State 139

   50 member: call DOT ID .

    $default  reduce using rule 50 (member)


State 140

   90 ifstmt: ifstmt ELSE $@8 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 161
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 141

   88 ifstmt: IF LEFT_PARENTH expr RIGHT_PARENTH . $@7 stmt

    $default  reduce using rule 87 ($@7)

    $@7  go to state 162


State 142

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   93 whilestmt: WHILE $@9 LEFT_PARENTH expr . RIGHT_PARENTH $@10 stmt

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_PARENTH  shift, and go to state 163


State 143

   60 elist: elist . COMMA expr
   96 forstmt: FOR $@11 LEFT_PARENTH elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@12 stmt

    SEMICOLON  shift, and go to state 164
    COMMA      shift, and go to state 114


State 144

   74 funcdef: FUNCTION ID $@3 LEFT_PARENTH . $@4 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    $default  reduce using rule 73 ($@4)

    $@4  go to state 165


State 145

   77 funcdef: FUNCTION $@5 LEFT_PARENTH $@6 . idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    ID  shift, and go to state 166

    $default  reduce using rule 86 (idlist)

    idlist  go to state 167


State 146

   99 returnstmt: RETURN $@13 expr SEMICOLON .

    $default  reduce using rule 99 (returnstmt)


State 147

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   37 assignexpr: LOCAL ID ASSIGN expr .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 37 (assignexpr)


State 148

   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH . LEFT_PARENTH elist RIGHT_BRACKET

    LEFT_PARENTH  shift, and go to state 154


State 149

   67 temp_stmt: temp_stmt stmt .

    $default  reduce using rule 67 (temp_stmt)


State 150

   71 block: LEFT_BRACE $@1 temp_stmt $@2 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 168


State 151

   66 indexedelem: LEFT_BRACE expr COLON . expr RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 169
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 152

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   60 elist: elist COMMA expr .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 60 (elist)


State 153

   65 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 65 (indexed)


State 154

   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH . elist RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 170
    objectdef   go to state 34
    const       go to state 37


State 155

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   38 assignexpr: DOUBLE_COLON ID ASSIGN expr .

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85

    $default  reduce using rule 38 (assignexpr)


State 156

   49 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 49 (member)


State 157

   57 normcall: LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 57 (normcall)


State 158

   58 methodcall: DOT_DOT ID LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 171
    objectdef   go to state 34
    const       go to state 37


State 159

   51 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 51 (member)


State 160

   52 call: call LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 52 (call)


State 161

   90 ifstmt: ifstmt ELSE $@8 stmt .

    $default  reduce using rule 90 (ifstmt)


State 162

   88 ifstmt: IF LEFT_PARENTH expr RIGHT_PARENTH $@7 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 172
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 163

   93 whilestmt: WHILE $@9 LEFT_PARENTH expr RIGHT_PARENTH . $@10 stmt

    $default  reduce using rule 92 ($@10)

    $@10  go to state 173


State 164

   96 forstmt: FOR $@11 LEFT_PARENTH elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTH $@12 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 174
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 37


State 165

   74 funcdef: FUNCTION ID $@3 LEFT_PARENTH $@4 . idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE

    ID  shift, and go to state 166

    $default  reduce using rule 86 (idlist)

    idlist  go to state 175


State 166

   84 idlist: ID .

    $default  reduce using rule 84 (idlist)


State 167

   77 funcdef: FUNCTION $@5 LEFT_PARENTH $@6 idlist . RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE
   85 idlist: idlist . COMMA ID

    RIGHT_PARENTH  shift, and go to state 176
    COMMA          shift, and go to state 177


State 168

   71 block: LEFT_BRACE $@1 temp_stmt $@2 RIGHT_BRACE .

    $default  reduce using rule 71 (block)


State 169

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   66 indexedelem: LEFT_BRACE expr COLON expr . RIGHT_BRACE

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    RIGHT_BRACE    shift, and go to state 178


State 170

   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist . RIGHT_BRACKET
   60 elist: elist . COMMA expr

    RIGHT_BRACKET  shift, and go to state 179
    COMMA          shift, and go to state 114


State 171

   58 methodcall: DOT_DOT ID LEFT_PARENTH elist . RIGHT_PARENTH
   60 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 180
    COMMA          shift, and go to state 114


State 172

   88 ifstmt: IF LEFT_PARENTH expr RIGHT_PARENTH $@7 stmt .

    $default  reduce using rule 88 (ifstmt)


State 173

   93 whilestmt: WHILE $@9 LEFT_PARENTH expr RIGHT_PARENTH $@10 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 181
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 174

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   96 forstmt: FOR $@11 LEFT_PARENTH elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTH $@12 stmt

    AND            shift, and go to state 73
    OR             shift, and go to state 74
    PLUS           shift, and go to state 75
    MINUS          shift, and go to state 76
    MUL            shift, and go to state 77
    DIV            shift, and go to state 78
    MODULO         shift, and go to state 79
    EQUAL          shift, and go to state 80
    NOT_EQUAL      shift, and go to state 81
    GREATER        shift, and go to state 82
    LESS           shift, and go to state 83
    GREATER_EQUAL  shift, and go to state 84
    LESS_EQUAL     shift, and go to state 85
    SEMICOLON      shift, and go to state 182


State 175

   74 funcdef: FUNCTION ID $@3 LEFT_PARENTH $@4 idlist . RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE
   85 idlist: idlist . COMMA ID

    RIGHT_PARENTH  shift, and go to state 183
    COMMA          shift, and go to state 177


State 176

   77 funcdef: FUNCTION $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH . LEFT_BRACE temp_stmt RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 184


State 177

   85 idlist: idlist COMMA . ID

    ID  shift, and go to state 185


State 178

   66 indexedelem: LEFT_BRACE expr COLON expr RIGHT_BRACE .

    $default  reduce using rule 66 (indexedelem)


State 179

   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_BRACKET .

    $default  reduce using rule 54 (call)


State 180

   58 methodcall: DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 58 (methodcall)


State 181

   93 whilestmt: WHILE $@9 LEFT_PARENTH expr RIGHT_PARENTH $@10 stmt .

    $default  reduce using rule 93 (whilestmt)


State 182

   96 forstmt: FOR $@11 LEFT_PARENTH elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTH $@12 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 61 (elist)

    expr        go to state 64
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 186
    objectdef   go to state 34
    const       go to state 37


State 183

   74 funcdef: FUNCTION ID $@3 LEFT_PARENTH $@4 idlist RIGHT_PARENTH . LEFT_BRACE temp_stmt RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 187


State 184

   77 funcdef: FUNCTION $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE . temp_stmt RIGHT_BRACE

    $default  reduce using rule 68 (temp_stmt)

    temp_stmt  go to state 188


State 185

   85 idlist: idlist COMMA ID .

    $default  reduce using rule 85 (idlist)


State 186

   60 elist: elist . COMMA expr
   96 forstmt: FOR $@11 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTH $@12 stmt

    RIGHT_PARENTH  shift, and go to state 189
    COMMA          shift, and go to state 114


State 187

   74 funcdef: FUNCTION ID $@3 LEFT_PARENTH $@4 idlist RIGHT_PARENTH LEFT_BRACE . temp_stmt RIGHT_BRACE

    $default  reduce using rule 68 (temp_stmt)

    temp_stmt  go to state 190


State 188

   67 temp_stmt: temp_stmt . stmt
   77 funcdef: FUNCTION $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt . RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    RIGHT_BRACE   shift, and go to state 191
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 149
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 189

   96 forstmt: FOR $@11 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH . $@12 stmt

    $default  reduce using rule 95 ($@12)

    $@12  go to state 192


State 190

   67 temp_stmt: temp_stmt . stmt
   74 funcdef: FUNCTION ID $@3 LEFT_PARENTH $@4 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt . RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    RIGHT_BRACE   shift, and go to state 193
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 149
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 191

   77 funcdef: FUNCTION $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE .

    $default  reduce using rule 77 (funcdef)


State 192

   96 forstmt: FOR $@11 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@12 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 194
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    const       go to state 37
    ifstmt      go to state 38
    whilestmt   go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 193

   74 funcdef: FUNCTION ID $@3 LEFT_PARENTH $@4 idlist RIGHT_PARENTH LEFT_BRACE temp_stmt RIGHT_BRACE .

    $default  reduce using rule 74 (funcdef)


State 194

   96 forstmt: FOR $@11 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@12 stmt .

    $default  reduce using rule 96 (forstmt)
