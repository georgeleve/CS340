Nonterminals useless in grammar

    whilestart
    whilecond
    whilestmt


Terminals unused in grammar

    WHILE
    UMINUS


Rules useless in grammar

   94 stmt: whilestmt

   95 whilestart: whilestmt

   96 whilecond: LEFT_PARENTH expr RIGHT_PARENTH

   97 whilestmt: whilestart whilecond stmt


State 92 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | forstmt
    6     | returnstmt
    7     | BREAK SEMICOLON
    8     | CONTINUE SEMICOLON
    9     | block
   10     | funcdef
   11     | SEMICOLON

   12 expr: assignexpr
   13     | expr PLUS expr
   14     | expr MINUS expr
   15     | expr MUL expr
   16     | expr DIV expr
   17     | expr MODULO expr
   18     | expr GREATER expr
   19     | expr GREATER_EQUAL expr
   20     | expr LESS expr
   21     | expr LESS_EQUAL expr
   22     | expr EQUAL expr
   23     | expr NOT_EQUAL expr
   24     | expr AND expr
   25     | expr OR expr
   26     | term

   27 term: LEFT_PARENTH expr RIGHT_PARENTH
   28     | MINUS expr
   29     | NOT expr
   30     | PLUS_PLUS lvalue
   31     | lvalue PLUS_PLUS
   32     | MINUS_MINUS lvalue
   33     | lvalue MINUS_MINUS
   34     | primary

   35 assignexpr: lvalue ASSIGN expr
   36           | lvalue ASSIGN funcdef

   37 primary: lvalue
   38        | call
   39        | objectdef
   40        | LEFT_PARENTH funcdef RIGHT_PARENTH
   41        | const

   42 lvalue: ID
   43       | LOCAL ID
   44       | DOUBLE_COLON ID
   45       | member

   46 member: lvalue DOT ID
   47       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   48       | call DOT ID
   49       | call LEFT_BRACKET expr RIGHT_BRACKET

   50 call: call LEFT_PARENTH elist RIGHT_PARENTH
   51     | lvalue LEFT_PARENTH elist RIGHT_PARENTH
   52     | lvalue DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH
   53     | LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

   54 elist: expr
   55      | elist COMMA expr
   56      | %empty

   57 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   58          | LEFT_BRACKET indexed RIGHT_BRACKET

   59 indexed: indexedelem
   60        | indexed COMMA indexedelem

   61 $@1: %empty

   62 $@2: %empty

   63 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr RIGHT_BRACE

   64 temp_stmt: temp_stmt stmt
   65          | %empty

   66 $@3: %empty

   67 $@4: %empty

   68 block: LEFT_BRACE $@3 temp_stmt $@4 RIGHT_BRACE

   69 $@5: %empty

   70 $@6: %empty

   71 $@7: %empty

   72 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

   73 funcprefix: FUNCTION ID
   74           | FUNCTION

   75 const: INTEGER
   76      | FLOAT
   77      | STRING
   78      | NIL
   79      | TRUE
   80      | FALSE

   81 idlist: ID
   82       | idlist COMMA ID
   83       | %empty

   84 ifprefix: IF LEFT_PARENTH expr RIGHT_PARENTH

   85 elseprefix: ELSE

   86 ifstmt: ifprefix stmt
   87       | ifprefix stmt elseprefix stmt

   88 $@8: %empty

   89 $@9: %empty

   90 forstmt: FOR $@8 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@9 stmt

   91 returnstmt: RETURN SEMICOLON

   92 $@10: %empty

   93 returnstmt: RETURN $@10 expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <stringval> (258) 42 43 44 46 48 52 73 81 82
    STRING <stringval> (259) 77
    INTEGER <intval> (260) 75
    FLOAT <floatval> (261) 76
    IF <stringval> (262) 84
    ELSE <stringval> (263) 85
    WHILE <stringval> (264)
    FOR <stringval> (265) 90
    FUNCTION <stringval> (266) 73 74
    RETURN <stringval> (267) 91 93
    BREAK <stringval> (268) 7
    CONTINUE <stringval> (269) 8
    AND <stringval> (270) 24
    NOT <stringval> (271) 29
    OR <stringval> (272) 25
    LOCAL <stringval> (273) 43
    TRUE <stringval> (274) 79
    FALSE <stringval> (275) 80
    NIL <stringval> (276) 78
    ASSIGN <stringval> (277) 35 36
    PLUS <stringval> (278) 13
    MINUS <stringval> (279) 14 28
    MUL <stringval> (280) 15
    DIV <stringval> (281) 16
    MODULO <stringval> (282) 17
    EQUAL <stringval> (283) 22
    NOT_EQUAL <stringval> (284) 23
    PLUS_PLUS <stringval> (285) 30 31
    MINUS_MINUS <stringval> (286) 32 33
    GREATER <stringval> (287) 18
    LESS <stringval> (288) 20
    GREATER_EQUAL <stringval> (289) 19
    LESS_EQUAL <stringval> (290) 21
    LEFT_BRACE <stringval> (291) 63 68 72
    RIGHT_BRACE <stringval> (292) 63 68 72
    LEFT_BRACKET <stringval> (293) 47 49 57 58
    RIGHT_BRACKET <stringval> (294) 47 49 57 58
    LEFT_PARENTH <stringval> (295) 27 40 50 51 52 53 72 84 90
    RIGHT_PARENTH <stringval> (296) 27 40 50 51 52 53 72 84 90
    SEMICOLON <stringval> (297) 3 7 8 11 90 91 93
    COMMA <stringval> (298) 55 60 82
    COLON <stringval> (299) 63
    DOUBLE_COLON <stringval> (300) 44
    DOT <stringval> (301) 46 48
    DOT_DOT <stringval> (302) 52
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0 1
    stmt <exprval> (51)
        on left: 3 4 5 6 7 8 9 10 11
        on right: 1 64 86 87 90
    expr <exprval> (52)
        on left: 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
        on right: 3 13 14 15 16 17 18 19 20 21 22 23 24 25 27 28 29 35 47 49 54 55 63 84 90 93
    term <exprval> (53)
        on left: 27 28 29 30 31 32 33 34
        on right: 26
    assignexpr <exprval> (54)
        on left: 35 36
        on right: 12
    primary <exprval> (55)
        on left: 37 38 39 40 41
        on right: 34
    lvalue <exprval> (56)
        on left: 42 43 44 45
        on right: 30 31 32 33 35 36 37 46 47 51 52
    member <exprval> (57)
        on left: 46 47 48 49
        on right: 45
    call <exprval> (58)
        on left: 50 51 52 53
        on right: 38 48 49 50
    elist <exprval> (59)
        on left: 54 55 56
        on right: 50 51 52 53 55 57 90
    objectdef <exprval> (60)
        on left: 57 58
        on right: 39
    indexed <exprval> (61)
        on left: 59 60
        on right: 58 60
    indexedelem <exprval> (62)
        on left: 63
        on right: 59 60
    $@1 (63)
        on left: 61
        on right: 63
    $@2 (64)
        on left: 62
        on right: 63
    temp_stmt <stringval> (65)
        on left: 64 65
        on right: 64 68 72
    block <stringval> (66)
        on left: 68
        on right: 9
    $@3 (67)
        on left: 66
        on right: 68
    $@4 (68)
        on left: 67
        on right: 68
    funcdef <exprval> (69)
        on left: 72
        on right: 10 36 40 53
    $@5 (70)
        on left: 69
        on right: 72
    $@6 (71)
        on left: 70
        on right: 72
    $@7 (72)
        on left: 71
        on right: 72
    funcprefix <exprval> (73)
        on left: 73 74
        on right: 72
    const <exprval> (74)
        on left: 75 76 77 78 79 80
        on right: 41
    idlist (75)
        on left: 81 82 83
        on right: 72 82
    ifprefix <intval> (76)
        on left: 84
        on right: 86 87
    elseprefix <intval> (77)
        on left: 85
        on right: 87
    ifstmt (78)
        on left: 86 87
        on right: 4
    forstmt <stringval> (79)
        on left: 90
        on right: 5
    $@8 (80)
        on left: 88
        on right: 90
    $@9 (81)
        on left: 89
        on right: 90
    returnstmt <exprval> (82)
        on left: 91 93
        on right: 6
    $@10 (83)
        on left: 92
        on right: 93


State 0

    0 $accept: . program $end

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    FOR           shift, and go to state 6
    FUNCTION      shift, and go to state 7
    RETURN        shift, and go to state 8
    BREAK         shift, and go to state 9
    CONTINUE      shift, and go to state 10
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACE    shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    SEMICOLON     shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 2 (program)

    program     go to state 24
    stmt        go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 1

   42 lvalue: ID .

    $default  reduce using rule 42 (lvalue)


State 2

   77 const: STRING .

    $default  reduce using rule 77 (const)


State 3

   75 const: INTEGER .

    $default  reduce using rule 75 (const)


State 4

   76 const: FLOAT .

    $default  reduce using rule 76 (const)


State 5

   84 ifprefix: IF . LEFT_PARENTH expr RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 42


State 6

   90 forstmt: FOR . $@8 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@9 stmt

    $default  reduce using rule 88 ($@8)

    $@8  go to state 43


State 7

   73 funcprefix: FUNCTION . ID
   74           | FUNCTION .

    ID  shift, and go to state 44

    $default  reduce using rule 74 (funcprefix)


State 8

   91 returnstmt: RETURN . SEMICOLON
   93           | RETURN . $@10 expr SEMICOLON

    SEMICOLON  shift, and go to state 45

    $default  reduce using rule 92 ($@10)

    $@10  go to state 46


State 9

    7 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 47


State 10

    8 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 11

   29 term: NOT . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 49
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 12

   43 lvalue: LOCAL . ID

    ID  shift, and go to state 50


State 13

   79 const: TRUE .

    $default  reduce using rule 79 (const)


State 14

   80 const: FALSE .

    $default  reduce using rule 80 (const)


State 15

   78 const: NIL .

    $default  reduce using rule 78 (const)


State 16

   28 term: MINUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 51
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 17

   30 term: PLUS_PLUS . lvalue

    ID            shift, and go to state 1
    LOCAL         shift, and go to state 12
    LEFT_PARENTH  shift, and go to state 52
    DOUBLE_COLON  shift, and go to state 23

    lvalue  go to state 53
    member  go to state 31
    call    go to state 54


State 18

   32 term: MINUS_MINUS . lvalue

    ID            shift, and go to state 1
    LOCAL         shift, and go to state 12
    LEFT_PARENTH  shift, and go to state 52
    DOUBLE_COLON  shift, and go to state 23

    lvalue  go to state 55
    member  go to state 31
    call    go to state 54


State 19

   68 block: LEFT_BRACE . $@3 temp_stmt $@4 RIGHT_BRACE

    $default  reduce using rule 66 ($@3)

    $@3  go to state 56


State 20

   57 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   58          | LEFT_BRACKET . indexed RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACE    shift, and go to state 57
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 56 (elist)

    expr         go to state 58
    term         go to state 27
    assignexpr   go to state 28
    primary      go to state 29
    lvalue       go to state 30
    member       go to state 31
    call         go to state 32
    elist        go to state 59
    objectdef    go to state 33
    indexed      go to state 60
    indexedelem  go to state 61
    const        go to state 37


State 21

   27 term: LEFT_PARENTH . expr RIGHT_PARENTH
   40 primary: LEFT_PARENTH . funcdef RIGHT_PARENTH
   53 call: LEFT_PARENTH . funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 7
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 62
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 63
    funcprefix  go to state 36
    const       go to state 37


State 22

   11 stmt: SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 23

   44 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 64


State 24

    0 $accept: program . $end

    $end  shift, and go to state 65


State 25

    1 program: stmt . program

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    FOR           shift, and go to state 6
    FUNCTION      shift, and go to state 7
    RETURN        shift, and go to state 8
    BREAK         shift, and go to state 9
    CONTINUE      shift, and go to state 10
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACE    shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    SEMICOLON     shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 2 (program)

    program     go to state 66
    stmt        go to state 25
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 26

    3 stmt: expr . SEMICOLON
   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    SEMICOLON      shift, and go to state 80


State 27

   26 expr: term .

    $default  reduce using rule 26 (expr)


State 28

   12 expr: assignexpr .

    $default  reduce using rule 12 (expr)


State 29

   34 term: primary .

    $default  reduce using rule 34 (term)


State 30

   31 term: lvalue . PLUS_PLUS
   33     | lvalue . MINUS_MINUS
   35 assignexpr: lvalue . ASSIGN expr
   36           | lvalue . ASSIGN funcdef
   37 primary: lvalue .
   46 member: lvalue . DOT ID
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . LEFT_PARENTH elist RIGHT_PARENTH
   52     | lvalue . DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH

    ASSIGN        shift, and go to state 81
    PLUS_PLUS     shift, and go to state 82
    MINUS_MINUS   shift, and go to state 83
    LEFT_BRACKET  shift, and go to state 84
    LEFT_PARENTH  shift, and go to state 85
    DOT           shift, and go to state 86
    DOT_DOT       shift, and go to state 87

    $default  reduce using rule 37 (primary)


State 31

   45 lvalue: member .

    $default  reduce using rule 45 (lvalue)


State 32

   38 primary: call .
   48 member: call . DOT ID
   49       | call . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: call . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 88
    LEFT_PARENTH  shift, and go to state 89
    DOT           shift, and go to state 90

    $default  reduce using rule 38 (primary)


State 33

   39 primary: objectdef .

    $default  reduce using rule 39 (primary)


State 34

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 35

   10 stmt: funcdef .

    $default  reduce using rule 10 (stmt)


State 36

   72 funcdef: funcprefix . $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    $default  reduce using rule 69 ($@5)

    $@5  go to state 91


State 37

   41 primary: const .

    $default  reduce using rule 41 (primary)


State 38

   86 ifstmt: ifprefix . stmt
   87       | ifprefix . stmt elseprefix stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    FOR           shift, and go to state 6
    FUNCTION      shift, and go to state 7
    RETURN        shift, and go to state 8
    BREAK         shift, and go to state 9
    CONTINUE      shift, and go to state 10
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACE    shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    SEMICOLON     shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 23

    stmt        go to state 92
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 39

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 40

    5 stmt: forstmt .

    $default  reduce using rule 5 (stmt)


State 41

    6 stmt: returnstmt .

    $default  reduce using rule 6 (stmt)


State 42

   84 ifprefix: IF LEFT_PARENTH . expr RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 93
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 43

   90 forstmt: FOR $@8 . LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@9 stmt

    LEFT_PARENTH  shift, and go to state 94


State 44

   73 funcprefix: FUNCTION ID .

    $default  reduce using rule 73 (funcprefix)


State 45

   91 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 91 (returnstmt)


State 46

   93 returnstmt: RETURN $@10 . expr SEMICOLON

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 95
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 47

    7 stmt: BREAK SEMICOLON .

    $default  reduce using rule 7 (stmt)


State 48

    8 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 49

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   29 term: NOT expr .

    $default  reduce using rule 29 (term)


State 50

   43 lvalue: LOCAL ID .

    $default  reduce using rule 43 (lvalue)


State 51

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   28 term: MINUS expr .

    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    $default  reduce using rule 28 (term)


State 52

   53 call: LEFT_PARENTH . funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    FUNCTION  shift, and go to state 7

    funcdef     go to state 96
    funcprefix  go to state 36


State 53

   30 term: PLUS_PLUS lvalue .
   46 member: lvalue . DOT ID
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . LEFT_PARENTH elist RIGHT_PARENTH
   52     | lvalue . DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 84
    LEFT_PARENTH  shift, and go to state 85
    DOT           shift, and go to state 86
    DOT_DOT       shift, and go to state 87

    $default  reduce using rule 30 (term)


State 54

   48 member: call . DOT ID
   49       | call . LEFT_BRACKET expr RIGHT_BRACKET
   50 call: call . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 88
    LEFT_PARENTH  shift, and go to state 89
    DOT           shift, and go to state 90


State 55

   32 term: MINUS_MINUS lvalue .
   46 member: lvalue . DOT ID
   47       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: lvalue . LEFT_PARENTH elist RIGHT_PARENTH
   52     | lvalue . DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 84
    LEFT_PARENTH  shift, and go to state 85
    DOT           shift, and go to state 86
    DOT_DOT       shift, and go to state 87

    $default  reduce using rule 32 (term)


State 56

   68 block: LEFT_BRACE $@3 . temp_stmt $@4 RIGHT_BRACE

    $default  reduce using rule 65 (temp_stmt)

    temp_stmt  go to state 97


State 57

   63 indexedelem: LEFT_BRACE . $@1 expr COLON $@2 expr RIGHT_BRACE

    $default  reduce using rule 61 ($@1)

    $@1  go to state 98


State 58

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   54 elist: expr .

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79

    $default  reduce using rule 54 (elist)


State 59

   55 elist: elist . COMMA expr
   57 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 99
    COMMA          shift, and go to state 100


State 60

   58 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET
   60 indexed: indexed . COMMA indexedelem

    RIGHT_BRACKET  shift, and go to state 101
    COMMA          shift, and go to state 102


State 61

   59 indexed: indexedelem .

    $default  reduce using rule 59 (indexed)


State 62

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   27 term: LEFT_PARENTH expr . RIGHT_PARENTH

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    RIGHT_PARENTH  shift, and go to state 103


State 63

   40 primary: LEFT_PARENTH funcdef . RIGHT_PARENTH
   53 call: LEFT_PARENTH funcdef . RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 104


State 64

   44 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 44 (lvalue)


State 65

    0 $accept: program $end .

    $default  accept


State 66

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 67

   24 expr: expr AND . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 105
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 68

   25 expr: expr OR . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 106
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 69

   13 expr: expr PLUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 107
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 70

   14 expr: expr MINUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 108
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 71

   15 expr: expr MUL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 109
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 72

   16 expr: expr DIV . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 110
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 73

   17 expr: expr MODULO . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 111
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 74

   22 expr: expr EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 112
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 75

   23 expr: expr NOT_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 113
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 76

   18 expr: expr GREATER . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 114
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 77

   20 expr: expr LESS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 115
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 78

   19 expr: expr GREATER_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 116
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 79

   21 expr: expr LESS_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 117
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 80

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 81

   35 assignexpr: lvalue ASSIGN . expr
   36           | lvalue ASSIGN . funcdef

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 7
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 118
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    funcdef     go to state 119
    funcprefix  go to state 36
    const       go to state 37


State 82

   31 term: lvalue PLUS_PLUS .

    $default  reduce using rule 31 (term)


State 83

   33 term: lvalue MINUS_MINUS .

    $default  reduce using rule 33 (term)


State 84

   47 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 120
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 85

   51 call: lvalue LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 56 (elist)

    expr        go to state 58
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 121
    objectdef   go to state 33
    const       go to state 37


State 86

   46 member: lvalue DOT . ID

    ID  shift, and go to state 122


State 87

   52 call: lvalue DOT_DOT . ID LEFT_PARENTH elist RIGHT_PARENTH

    ID  shift, and go to state 123


State 88

   49 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 124
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 89

   50 call: call LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 56 (elist)

    expr        go to state 58
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 125
    objectdef   go to state 33
    const       go to state 37


State 90

   48 member: call DOT . ID

    ID  shift, and go to state 126


State 91

   72 funcdef: funcprefix $@5 . LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    LEFT_PARENTH  shift, and go to state 127


State 92

   86 ifstmt: ifprefix stmt .
   87       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 128

    ELSE      [reduce using rule 86 (ifstmt)]
    $default  reduce using rule 86 (ifstmt)

    elseprefix  go to state 129


State 93

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   84 ifprefix: IF LEFT_PARENTH expr . RIGHT_PARENTH

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    RIGHT_PARENTH  shift, and go to state 130


State 94

   90 forstmt: FOR $@8 LEFT_PARENTH . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@9 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 56 (elist)

    expr        go to state 58
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 131
    objectdef   go to state 33
    const       go to state 37


State 95

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   93 returnstmt: RETURN $@10 expr . SEMICOLON

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    SEMICOLON      shift, and go to state 132


State 96

   53 call: LEFT_PARENTH funcdef . RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 133


State 97

   64 temp_stmt: temp_stmt . stmt
   68 block: LEFT_BRACE $@3 temp_stmt . $@4 RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    FOR           shift, and go to state 6
    FUNCTION      shift, and go to state 7
    RETURN        shift, and go to state 8
    BREAK         shift, and go to state 9
    CONTINUE      shift, and go to state 10
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACE    shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    SEMICOLON     shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 67 ($@4)

    stmt        go to state 134
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    $@4         go to state 135
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 98

   63 indexedelem: LEFT_BRACE $@1 . expr COLON $@2 expr RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 136
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 99

   57 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 57 (objectdef)


State 100

   55 elist: elist COMMA . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 137
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 101

   58 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 58 (objectdef)


State 102

   60 indexed: indexed COMMA . indexedelem

    LEFT_BRACE  shift, and go to state 57

    indexedelem  go to state 138


State 103

   27 term: LEFT_PARENTH expr RIGHT_PARENTH .

    $default  reduce using rule 27 (term)


State 104

   40 primary: LEFT_PARENTH funcdef RIGHT_PARENTH .
   53 call: LEFT_PARENTH funcdef RIGHT_PARENTH . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 139

    $default  reduce using rule 40 (primary)


State 105

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   24     | expr AND expr .
   25     | expr . OR expr

    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79

    $default  reduce using rule 24 (expr)


State 106

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   25     | expr OR expr .

    AND            shift, and go to state 67
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79

    $default  reduce using rule 25 (expr)


State 107

   13 expr: expr . PLUS expr
   13     | expr PLUS expr .
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    $default  reduce using rule 13 (expr)


State 108

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   14     | expr MINUS expr .
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    $default  reduce using rule 14 (expr)


State 109

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   15     | expr MUL expr .
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 15 (expr)


State 110

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   16     | expr DIV expr .
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 16 (expr)


State 111

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   17     | expr MODULO expr .
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 112

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   22     | expr EQUAL expr .
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 22 (expr)


State 113

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   23     | expr NOT_EQUAL expr .
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 114

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   18     | expr GREATER expr .
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS    shift, and go to state 69
    MINUS   shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 18 (expr)


State 115

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   20     | expr LESS expr .
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS    shift, and go to state 69
    MINUS   shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 116

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   19     | expr GREATER_EQUAL expr .
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS    shift, and go to state 69
    MINUS   shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 19 (expr)


State 117

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   21     | expr LESS_EQUAL expr .
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr

    PLUS    shift, and go to state 69
    MINUS   shift, and go to state 70
    MUL     shift, and go to state 71
    DIV     shift, and go to state 72
    MODULO  shift, and go to state 73

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 118

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   35 assignexpr: lvalue ASSIGN expr .

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79

    $default  reduce using rule 35 (assignexpr)


State 119

   36 assignexpr: lvalue ASSIGN funcdef .

    $default  reduce using rule 36 (assignexpr)


State 120

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   47 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    RIGHT_BRACKET  shift, and go to state 140


State 121

   51 call: lvalue LEFT_PARENTH elist . RIGHT_PARENTH
   55 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 141
    COMMA          shift, and go to state 100


State 122

   46 member: lvalue DOT ID .

    $default  reduce using rule 46 (member)


State 123

   52 call: lvalue DOT_DOT ID . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 142


State 124

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   49 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    RIGHT_BRACKET  shift, and go to state 143


State 125

   50 call: call LEFT_PARENTH elist . RIGHT_PARENTH
   55 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 144
    COMMA          shift, and go to state 100


State 126

   48 member: call DOT ID .

    $default  reduce using rule 48 (member)


State 127

   72 funcdef: funcprefix $@5 LEFT_PARENTH . $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    $default  reduce using rule 70 ($@6)

    $@6  go to state 145


State 128

   85 elseprefix: ELSE .

    $default  reduce using rule 85 (elseprefix)


State 129

   87 ifstmt: ifprefix stmt elseprefix . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    FOR           shift, and go to state 6
    FUNCTION      shift, and go to state 7
    RETURN        shift, and go to state 8
    BREAK         shift, and go to state 9
    CONTINUE      shift, and go to state 10
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACE    shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    SEMICOLON     shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 23

    stmt        go to state 146
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 130

   84 ifprefix: IF LEFT_PARENTH expr RIGHT_PARENTH .

    $default  reduce using rule 84 (ifprefix)


State 131

   55 elist: elist . COMMA expr
   90 forstmt: FOR $@8 LEFT_PARENTH elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@9 stmt

    SEMICOLON  shift, and go to state 147
    COMMA      shift, and go to state 100


State 132

   93 returnstmt: RETURN $@10 expr SEMICOLON .

    $default  reduce using rule 93 (returnstmt)


State 133

   53 call: LEFT_PARENTH funcdef RIGHT_PARENTH . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 139


State 134

   64 temp_stmt: temp_stmt stmt .

    $default  reduce using rule 64 (temp_stmt)


State 135

   68 block: LEFT_BRACE $@3 temp_stmt $@4 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 148


State 136

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   63 indexedelem: LEFT_BRACE $@1 expr . COLON $@2 expr RIGHT_BRACE

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    COLON          shift, and go to state 149


State 137

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   55 elist: elist COMMA expr .

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79

    $default  reduce using rule 55 (elist)


State 138

   60 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 60 (indexed)


State 139

   53 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 56 (elist)

    expr        go to state 58
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 150
    objectdef   go to state 33
    const       go to state 37


State 140

   47 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 47 (member)


State 141

   51 call: lvalue LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 51 (call)


State 142

   52 call: lvalue DOT_DOT ID LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 56 (elist)

    expr        go to state 58
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 151
    objectdef   go to state 33
    const       go to state 37


State 143

   49 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 49 (member)


State 144

   50 call: call LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 50 (call)


State 145

   72 funcdef: funcprefix $@5 LEFT_PARENTH $@6 . idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    ID  shift, and go to state 152

    $default  reduce using rule 83 (idlist)

    idlist  go to state 153


State 146

   87 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 87 (ifstmt)


State 147

   90 forstmt: FOR $@8 LEFT_PARENTH elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTH $@9 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 154
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 148

   68 block: LEFT_BRACE $@3 temp_stmt $@4 RIGHT_BRACE .

    $default  reduce using rule 68 (block)


State 149

   63 indexedelem: LEFT_BRACE $@1 expr COLON . $@2 expr RIGHT_BRACE

    $default  reduce using rule 62 ($@2)

    $@2  go to state 155


State 150

   53 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist . RIGHT_PARENTH
   55 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 156
    COMMA          shift, and go to state 100


State 151

   52 call: lvalue DOT_DOT ID LEFT_PARENTH elist . RIGHT_PARENTH
   55 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 157
    COMMA          shift, and go to state 100


State 152

   81 idlist: ID .

    $default  reduce using rule 81 (idlist)


State 153

   72 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist . RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE
   82 idlist: idlist . COMMA ID

    RIGHT_PARENTH  shift, and go to state 158
    COMMA          shift, and go to state 159


State 154

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   90 forstmt: FOR $@8 LEFT_PARENTH elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTH $@9 stmt

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    SEMICOLON      shift, and go to state 160


State 155

   63 indexedelem: LEFT_BRACE $@1 expr COLON $@2 . expr RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    expr        go to state 161
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    const       go to state 37


State 156

   53 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 53 (call)


State 157

   52 call: lvalue DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 52 (call)


State 158

   72 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH . LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 162


State 159

   82 idlist: idlist COMMA . ID

    ID  shift, and go to state 163


State 160

   90 forstmt: FOR $@8 LEFT_PARENTH elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTH $@9 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    DOUBLE_COLON  shift, and go to state 23

    $default  reduce using rule 56 (elist)

    expr        go to state 58
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    elist       go to state 164
    objectdef   go to state 33
    const       go to state 37


State 161

   13 expr: expr . PLUS expr
   14     | expr . MINUS expr
   15     | expr . MUL expr
   16     | expr . DIV expr
   17     | expr . MODULO expr
   18     | expr . GREATER expr
   19     | expr . GREATER_EQUAL expr
   20     | expr . LESS expr
   21     | expr . LESS_EQUAL expr
   22     | expr . EQUAL expr
   23     | expr . NOT_EQUAL expr
   24     | expr . AND expr
   25     | expr . OR expr
   63 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr . RIGHT_BRACE

    AND            shift, and go to state 67
    OR             shift, and go to state 68
    PLUS           shift, and go to state 69
    MINUS          shift, and go to state 70
    MUL            shift, and go to state 71
    DIV            shift, and go to state 72
    MODULO         shift, and go to state 73
    EQUAL          shift, and go to state 74
    NOT_EQUAL      shift, and go to state 75
    GREATER        shift, and go to state 76
    LESS           shift, and go to state 77
    GREATER_EQUAL  shift, and go to state 78
    LESS_EQUAL     shift, and go to state 79
    RIGHT_BRACE    shift, and go to state 165


State 162

   72 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE . $@7 temp_stmt RIGHT_BRACE

    $default  reduce using rule 71 ($@7)

    $@7  go to state 166


State 163

   82 idlist: idlist COMMA ID .

    $default  reduce using rule 82 (idlist)


State 164

   55 elist: elist . COMMA expr
   90 forstmt: FOR $@8 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTH $@9 stmt

    RIGHT_PARENTH  shift, and go to state 167
    COMMA          shift, and go to state 100


State 165

   63 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr RIGHT_BRACE .

    $default  reduce using rule 63 (indexedelem)


State 166

   72 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 . temp_stmt RIGHT_BRACE

    $default  reduce using rule 65 (temp_stmt)

    temp_stmt  go to state 168


State 167

   90 forstmt: FOR $@8 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH . $@9 stmt

    $default  reduce using rule 89 ($@9)

    $@9  go to state 169


State 168

   64 temp_stmt: temp_stmt . stmt
   72 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt . RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    FOR           shift, and go to state 6
    FUNCTION      shift, and go to state 7
    RETURN        shift, and go to state 8
    BREAK         shift, and go to state 9
    CONTINUE      shift, and go to state 10
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACE    shift, and go to state 19
    RIGHT_BRACE   shift, and go to state 170
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    SEMICOLON     shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 23

    stmt        go to state 134
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 169

   90 forstmt: FOR $@8 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@9 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    FOR           shift, and go to state 6
    FUNCTION      shift, and go to state 7
    RETURN        shift, and go to state 8
    BREAK         shift, and go to state 9
    CONTINUE      shift, and go to state 10
    NOT           shift, and go to state 11
    LOCAL         shift, and go to state 12
    TRUE          shift, and go to state 13
    FALSE         shift, and go to state 14
    NIL           shift, and go to state 15
    MINUS         shift, and go to state 16
    PLUS_PLUS     shift, and go to state 17
    MINUS_MINUS   shift, and go to state 18
    LEFT_BRACE    shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 20
    LEFT_PARENTH  shift, and go to state 21
    SEMICOLON     shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 23

    stmt        go to state 171
    expr        go to state 26
    term        go to state 27
    assignexpr  go to state 28
    primary     go to state 29
    lvalue      go to state 30
    member      go to state 31
    call        go to state 32
    objectdef   go to state 33
    block       go to state 34
    funcdef     go to state 35
    funcprefix  go to state 36
    const       go to state 37
    ifprefix    go to state 38
    ifstmt      go to state 39
    forstmt     go to state 40
    returnstmt  go to state 41


State 170

   72 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE .

    $default  reduce using rule 72 (funcdef)


State 171

   90 forstmt: FOR $@8 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@9 stmt .

    $default  reduce using rule 90 (forstmt)
