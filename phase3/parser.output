Terminals unused in grammar

    UMINUS


State 95 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmt program
    2        | %empty

    3 stmt: expr SEMICOLON
    4     | ifstmt
    5     | whilestmt
    6     | forstmt
    7     | returnstmt
    8     | BREAK SEMICOLON
    9     | CONTINUE SEMICOLON
   10     | block
   11     | funcdef
   12     | SEMICOLON

   13 expr: assignexpr
   14     | expr PLUS expr
   15     | expr MINUS expr
   16     | expr MUL expr
   17     | expr DIV expr
   18     | expr MODULO expr
   19     | expr GREATER expr
   20     | expr GREATER_EQUAL expr
   21     | expr LESS expr
   22     | expr LESS_EQUAL expr
   23     | expr EQUAL expr
   24     | expr NOT_EQUAL expr
   25     | expr AND expr
   26     | expr OR expr
   27     | term

   28 term: LEFT_PARENTH expr RIGHT_PARENTH
   29     | MINUS expr
   30     | NOT expr
   31     | PLUS_PLUS lvalue
   32     | lvalue PLUS_PLUS
   33     | MINUS_MINUS lvalue
   34     | lvalue MINUS_MINUS
   35     | primary

   36 assignexpr: lvalue ASSIGN expr
   37           | lvalue ASSIGN funcdef

   38 primary: lvalue
   39        | call
   40        | objectdef
   41        | LEFT_PARENTH funcdef RIGHT_PARENTH
   42        | const

   43 lvalue: ID
   44       | LOCAL ID
   45       | DOUBLE_COLON ID
   46       | member

   47 member: lvalue DOT ID
   48       | lvalue LEFT_BRACKET expr RIGHT_BRACKET
   49       | call DOT ID
   50       | call LEFT_BRACKET expr RIGHT_BRACKET

   51 call: call LEFT_PARENTH elist RIGHT_PARENTH
   52     | lvalue LEFT_PARENTH elist RIGHT_PARENTH
   53     | lvalue DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH
   54     | LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

   55 elist: expr
   56      | elist COMMA expr
   57      | %empty

   58 objectdef: LEFT_BRACKET elist RIGHT_BRACKET
   59          | LEFT_BRACKET indexed RIGHT_BRACKET

   60 indexed: indexedelem
   61        | indexed COMMA indexedelem

   62 $@1: %empty

   63 $@2: %empty

   64 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr RIGHT_BRACE

   65 temp_stmt: temp_stmt stmt
   66          | %empty

   67 $@3: %empty

   68 $@4: %empty

   69 block: LEFT_BRACE $@3 temp_stmt $@4 RIGHT_BRACE

   70 $@5: %empty

   71 $@6: %empty

   72 $@7: %empty

   73 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

   74 funcprefix: FUNCTION ID
   75           | FUNCTION

   76 const: INTEGER
   77      | FLOAT
   78      | STRING
   79      | NIL
   80      | TRUE
   81      | FALSE

   82 idlist: ID
   83       | idlist COMMA ID
   84       | %empty

   85 ifprefix: IF LEFT_PARENTH expr RIGHT_PARENTH

   86 elseprefix: ELSE

   87 ifstmt: ifprefix stmt
   88       | ifprefix stmt elseprefix stmt

   89 $@8: %empty

   90 $@9: %empty

   91 whilestmt: WHILE $@8 LEFT_PARENTH expr RIGHT_PARENTH $@9 stmt

   92 $@10: %empty

   93 $@11: %empty

   94 forstmt: FOR $@10 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@11 stmt

   95 returnstmt: RETURN SEMICOLON

   96 $@12: %empty

   97 returnstmt: RETURN $@12 expr SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <stringval> (258) 43 44 45 47 49 53 74 82 83
    STRING <stringval> (259) 78
    INTEGER <intval> (260) 76
    FLOAT <floatval> (261) 77
    IF <stringval> (262) 85
    ELSE <stringval> (263) 86
    WHILE <stringval> (264) 91
    FOR <stringval> (265) 94
    FUNCTION <stringval> (266) 74 75
    RETURN <stringval> (267) 95 97
    BREAK <stringval> (268) 8
    CONTINUE <stringval> (269) 9
    AND <stringval> (270) 25
    NOT <stringval> (271) 30
    OR <stringval> (272) 26
    LOCAL <stringval> (273) 44
    TRUE <stringval> (274) 80
    FALSE <stringval> (275) 81
    NIL <stringval> (276) 79
    ASSIGN <stringval> (277) 36 37
    PLUS <stringval> (278) 14
    MINUS <stringval> (279) 15 29
    MUL <stringval> (280) 16
    DIV <stringval> (281) 17
    MODULO <stringval> (282) 18
    EQUAL <stringval> (283) 23
    NOT_EQUAL <stringval> (284) 24
    PLUS_PLUS <stringval> (285) 31 32
    MINUS_MINUS <stringval> (286) 33 34
    GREATER <stringval> (287) 19
    LESS <stringval> (288) 21
    GREATER_EQUAL <stringval> (289) 20
    LESS_EQUAL <stringval> (290) 22
    LEFT_BRACE <stringval> (291) 64 69 73
    RIGHT_BRACE <stringval> (292) 64 69 73
    LEFT_BRACKET <stringval> (293) 48 50 58 59
    RIGHT_BRACKET <stringval> (294) 48 50 58 59
    LEFT_PARENTH <stringval> (295) 28 41 51 52 53 54 73 85 91 94
    RIGHT_PARENTH <stringval> (296) 28 41 51 52 53 54 73 85 91 94
    SEMICOLON <stringval> (297) 3 8 9 12 94 95 97
    COMMA <stringval> (298) 56 61 83
    COLON <stringval> (299) 64
    DOUBLE_COLON <stringval> (300) 45
    DOT <stringval> (301) 47 49
    DOT_DOT <stringval> (302) 53
    UMINUS (303)


Nonterminals, with rules where they appear

    $accept (49)
        on left: 0
    program (50)
        on left: 1 2
        on right: 0 1
    stmt <exprval> (51)
        on left: 3 4 5 6 7 8 9 10 11 12
        on right: 1 65 87 88 91 94
    expr <exprval> (52)
        on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
        on right: 3 14 15 16 17 18 19 20 21 22 23 24 25 26 28 29 30 36 48 50 55 56 64 85 91 94 97
    term <exprval> (53)
        on left: 28 29 30 31 32 33 34 35
        on right: 27
    assignexpr <exprval> (54)
        on left: 36 37
        on right: 13
    primary <exprval> (55)
        on left: 38 39 40 41 42
        on right: 35
    lvalue <exprval> (56)
        on left: 43 44 45 46
        on right: 31 32 33 34 36 37 38 47 48 52 53
    member <exprval> (57)
        on left: 47 48 49 50
        on right: 46
    call <exprval> (58)
        on left: 51 52 53 54
        on right: 39 49 50 51
    elist <exprval> (59)
        on left: 55 56 57
        on right: 51 52 53 54 56 58 94
    objectdef <exprval> (60)
        on left: 58 59
        on right: 40
    indexed <exprval> (61)
        on left: 60 61
        on right: 59 61
    indexedelem <exprval> (62)
        on left: 64
        on right: 60 61
    $@1 (63)
        on left: 62
        on right: 64
    $@2 (64)
        on left: 63
        on right: 64
    temp_stmt <stringval> (65)
        on left: 65 66
        on right: 65 69 73
    block <stringval> (66)
        on left: 69
        on right: 10
    $@3 (67)
        on left: 67
        on right: 69
    $@4 (68)
        on left: 68
        on right: 69
    funcdef <exprval> (69)
        on left: 73
        on right: 11 37 41 54
    $@5 (70)
        on left: 70
        on right: 73
    $@6 (71)
        on left: 71
        on right: 73
    $@7 (72)
        on left: 72
        on right: 73
    funcprefix <exprval> (73)
        on left: 74 75
        on right: 73
    const <exprval> (74)
        on left: 76 77 78 79 80 81
        on right: 42
    idlist (75)
        on left: 82 83 84
        on right: 73 83
    ifprefix <intval> (76)
        on left: 85
        on right: 87 88
    elseprefix <intval> (77)
        on left: 86
        on right: 88
    ifstmt (78)
        on left: 87 88
        on right: 4
    whilestmt <stringval> (79)
        on left: 91
        on right: 5
    $@8 (80)
        on left: 89
        on right: 91
    $@9 (81)
        on left: 90
        on right: 91
    forstmt <stringval> (82)
        on left: 94
        on right: 6
    $@10 (83)
        on left: 92
        on right: 94
    $@11 (84)
        on left: 93
        on right: 94
    returnstmt <exprval> (85)
        on left: 95 97
        on right: 7
    $@12 (86)
        on left: 96
        on right: 97


State 0

    0 $accept: . program $end

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 25
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    funcprefix  go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 1

   43 lvalue: ID .

    $default  reduce using rule 43 (lvalue)


State 2

   78 const: STRING .

    $default  reduce using rule 78 (const)


State 3

   76 const: INTEGER .

    $default  reduce using rule 76 (const)


State 4

   77 const: FLOAT .

    $default  reduce using rule 77 (const)


State 5

   85 ifprefix: IF . LEFT_PARENTH expr RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 44


State 6

   91 whilestmt: WHILE . $@8 LEFT_PARENTH expr RIGHT_PARENTH $@9 stmt

    $default  reduce using rule 89 ($@8)

    $@8  go to state 45


State 7

   94 forstmt: FOR . $@10 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@11 stmt

    $default  reduce using rule 92 ($@10)

    $@10  go to state 46


State 8

   74 funcprefix: FUNCTION . ID
   75           | FUNCTION .

    ID  shift, and go to state 47

    $default  reduce using rule 75 (funcprefix)


State 9

   95 returnstmt: RETURN . SEMICOLON
   97           | RETURN . $@12 expr SEMICOLON

    SEMICOLON  shift, and go to state 48

    $default  reduce using rule 96 ($@12)

    $@12  go to state 49


State 10

    8 stmt: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 50


State 11

    9 stmt: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 51


State 12

   30 term: NOT . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 52
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 13

   44 lvalue: LOCAL . ID

    ID  shift, and go to state 53


State 14

   80 const: TRUE .

    $default  reduce using rule 80 (const)


State 15

   81 const: FALSE .

    $default  reduce using rule 81 (const)


State 16

   79 const: NIL .

    $default  reduce using rule 79 (const)


State 17

   29 term: MINUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 54
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 18

   31 term: PLUS_PLUS . lvalue

    ID            shift, and go to state 1
    LOCAL         shift, and go to state 13
    LEFT_PARENTH  shift, and go to state 55
    DOUBLE_COLON  shift, and go to state 24

    lvalue  go to state 56
    member  go to state 32
    call    go to state 57


State 19

   33 term: MINUS_MINUS . lvalue

    ID            shift, and go to state 1
    LOCAL         shift, and go to state 13
    LEFT_PARENTH  shift, and go to state 55
    DOUBLE_COLON  shift, and go to state 24

    lvalue  go to state 58
    member  go to state 32
    call    go to state 57


State 20

   69 block: LEFT_BRACE . $@3 temp_stmt $@4 RIGHT_BRACE

    $default  reduce using rule 67 ($@3)

    $@3  go to state 59


State 21

   58 objectdef: LEFT_BRACKET . elist RIGHT_BRACKET
   59          | LEFT_BRACKET . indexed RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 60
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 57 (elist)

    expr         go to state 61
    term         go to state 28
    assignexpr   go to state 29
    primary      go to state 30
    lvalue       go to state 31
    member       go to state 32
    call         go to state 33
    elist        go to state 62
    objectdef    go to state 34
    indexed      go to state 63
    indexedelem  go to state 64
    const        go to state 38


State 22

   28 term: LEFT_PARENTH . expr RIGHT_PARENTH
   41 primary: LEFT_PARENTH . funcdef RIGHT_PARENTH
   54 call: LEFT_PARENTH . funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 8
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 65
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 66
    funcprefix  go to state 37
    const       go to state 38


State 23

   12 stmt: SEMICOLON .

    $default  reduce using rule 12 (stmt)


State 24

   45 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 67


State 25

    0 $accept: program . $end

    $end  shift, and go to state 68


State 26

    1 program: stmt . program

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 2 (program)

    program     go to state 69
    stmt        go to state 26
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    funcprefix  go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 27

    3 stmt: expr . SEMICOLON
   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    SEMICOLON      shift, and go to state 83


State 28

   27 expr: term .

    $default  reduce using rule 27 (expr)


State 29

   13 expr: assignexpr .

    $default  reduce using rule 13 (expr)


State 30

   35 term: primary .

    $default  reduce using rule 35 (term)


State 31

   32 term: lvalue . PLUS_PLUS
   34     | lvalue . MINUS_MINUS
   36 assignexpr: lvalue . ASSIGN expr
   37           | lvalue . ASSIGN funcdef
   38 primary: lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: lvalue . LEFT_PARENTH elist RIGHT_PARENTH
   53     | lvalue . DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH

    ASSIGN        shift, and go to state 84
    PLUS_PLUS     shift, and go to state 85
    MINUS_MINUS   shift, and go to state 86
    LEFT_BRACKET  shift, and go to state 87
    LEFT_PARENTH  shift, and go to state 88
    DOT           shift, and go to state 89
    DOT_DOT       shift, and go to state 90

    $default  reduce using rule 38 (primary)


State 32

   46 lvalue: member .

    $default  reduce using rule 46 (lvalue)


State 33

   39 primary: call .
   49 member: call . DOT ID
   50       | call . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: call . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 91
    LEFT_PARENTH  shift, and go to state 92
    DOT           shift, and go to state 93

    $default  reduce using rule 39 (primary)


State 34

   40 primary: objectdef .

    $default  reduce using rule 40 (primary)


State 35

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 36

   11 stmt: funcdef .

    $default  reduce using rule 11 (stmt)


State 37

   73 funcdef: funcprefix . $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    $default  reduce using rule 70 ($@5)

    $@5  go to state 94


State 38

   42 primary: const .

    $default  reduce using rule 42 (primary)


State 39

   87 ifstmt: ifprefix . stmt
   88       | ifprefix . stmt elseprefix stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 95
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    funcprefix  go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 40

    4 stmt: ifstmt .

    $default  reduce using rule 4 (stmt)


State 41

    5 stmt: whilestmt .

    $default  reduce using rule 5 (stmt)


State 42

    6 stmt: forstmt .

    $default  reduce using rule 6 (stmt)


State 43

    7 stmt: returnstmt .

    $default  reduce using rule 7 (stmt)


State 44

   85 ifprefix: IF LEFT_PARENTH . expr RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 96
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 45

   91 whilestmt: WHILE $@8 . LEFT_PARENTH expr RIGHT_PARENTH $@9 stmt

    LEFT_PARENTH  shift, and go to state 97


State 46

   94 forstmt: FOR $@10 . LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@11 stmt

    LEFT_PARENTH  shift, and go to state 98


State 47

   74 funcprefix: FUNCTION ID .

    $default  reduce using rule 74 (funcprefix)


State 48

   95 returnstmt: RETURN SEMICOLON .

    $default  reduce using rule 95 (returnstmt)


State 49

   97 returnstmt: RETURN $@12 . expr SEMICOLON

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 99
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 50

    8 stmt: BREAK SEMICOLON .

    $default  reduce using rule 8 (stmt)


State 51

    9 stmt: CONTINUE SEMICOLON .

    $default  reduce using rule 9 (stmt)


State 52

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   30 term: NOT expr .

    $default  reduce using rule 30 (term)


State 53

   44 lvalue: LOCAL ID .

    $default  reduce using rule 44 (lvalue)


State 54

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   29 term: MINUS expr .

    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    $default  reduce using rule 29 (term)


State 55

   54 call: LEFT_PARENTH . funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    FUNCTION  shift, and go to state 8

    funcdef     go to state 100
    funcprefix  go to state 37


State 56

   31 term: PLUS_PLUS lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: lvalue . LEFT_PARENTH elist RIGHT_PARENTH
   53     | lvalue . DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 87
    LEFT_PARENTH  shift, and go to state 88
    DOT           shift, and go to state 89
    DOT_DOT       shift, and go to state 90

    $default  reduce using rule 31 (term)


State 57

   49 member: call . DOT ID
   50       | call . LEFT_BRACKET expr RIGHT_BRACKET
   51 call: call . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 91
    LEFT_PARENTH  shift, and go to state 92
    DOT           shift, and go to state 93


State 58

   33 term: MINUS_MINUS lvalue .
   47 member: lvalue . DOT ID
   48       | lvalue . LEFT_BRACKET expr RIGHT_BRACKET
   52 call: lvalue . LEFT_PARENTH elist RIGHT_PARENTH
   53     | lvalue . DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_BRACKET  shift, and go to state 87
    LEFT_PARENTH  shift, and go to state 88
    DOT           shift, and go to state 89
    DOT_DOT       shift, and go to state 90

    $default  reduce using rule 33 (term)


State 59

   69 block: LEFT_BRACE $@3 . temp_stmt $@4 RIGHT_BRACE

    $default  reduce using rule 66 (temp_stmt)

    temp_stmt  go to state 101


State 60

   64 indexedelem: LEFT_BRACE . $@1 expr COLON $@2 expr RIGHT_BRACE

    $default  reduce using rule 62 ($@1)

    $@1  go to state 102


State 61

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   55 elist: expr .

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 55 (elist)


State 62

   56 elist: elist . COMMA expr
   58 objectdef: LEFT_BRACKET elist . RIGHT_BRACKET

    RIGHT_BRACKET  shift, and go to state 103
    COMMA          shift, and go to state 104


State 63

   59 objectdef: LEFT_BRACKET indexed . RIGHT_BRACKET
   61 indexed: indexed . COMMA indexedelem

    RIGHT_BRACKET  shift, and go to state 105
    COMMA          shift, and go to state 106


State 64

   60 indexed: indexedelem .

    $default  reduce using rule 60 (indexed)


State 65

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   28 term: LEFT_PARENTH expr . RIGHT_PARENTH

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    RIGHT_PARENTH  shift, and go to state 107


State 66

   41 primary: LEFT_PARENTH funcdef . RIGHT_PARENTH
   54 call: LEFT_PARENTH funcdef . RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 108


State 67

   45 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 45 (lvalue)


State 68

    0 $accept: program $end .

    $default  accept


State 69

    1 program: stmt program .

    $default  reduce using rule 1 (program)


State 70

   25 expr: expr AND . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 109
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 71

   26 expr: expr OR . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 110
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 72

   14 expr: expr PLUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 111
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 73

   15 expr: expr MINUS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 112
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 74

   16 expr: expr MUL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 113
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 75

   17 expr: expr DIV . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 114
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 76

   18 expr: expr MODULO . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 115
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 77

   23 expr: expr EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 116
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 78

   24 expr: expr NOT_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 117
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 79

   19 expr: expr GREATER . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 118
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 80

   21 expr: expr LESS . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 119
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 81

   20 expr: expr GREATER_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 120
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 82

   22 expr: expr LESS_EQUAL . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 121
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 83

    3 stmt: expr SEMICOLON .

    $default  reduce using rule 3 (stmt)


State 84

   36 assignexpr: lvalue ASSIGN . expr
   37           | lvalue ASSIGN . funcdef

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    FUNCTION      shift, and go to state 8
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 122
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    funcdef     go to state 123
    funcprefix  go to state 37
    const       go to state 38


State 85

   32 term: lvalue PLUS_PLUS .

    $default  reduce using rule 32 (term)


State 86

   34 term: lvalue MINUS_MINUS .

    $default  reduce using rule 34 (term)


State 87

   48 member: lvalue LEFT_BRACKET . expr RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 124
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 88

   52 call: lvalue LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 57 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 125
    objectdef   go to state 34
    const       go to state 38


State 89

   47 member: lvalue DOT . ID

    ID  shift, and go to state 126


State 90

   53 call: lvalue DOT_DOT . ID LEFT_PARENTH elist RIGHT_PARENTH

    ID  shift, and go to state 127


State 91

   50 member: call LEFT_BRACKET . expr RIGHT_BRACKET

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 128
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 92

   51 call: call LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 57 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 129
    objectdef   go to state 34
    const       go to state 38


State 93

   49 member: call DOT . ID

    ID  shift, and go to state 130


State 94

   73 funcdef: funcprefix $@5 . LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    LEFT_PARENTH  shift, and go to state 131


State 95

   87 ifstmt: ifprefix stmt .
   88       | ifprefix stmt . elseprefix stmt

    ELSE  shift, and go to state 132

    ELSE      [reduce using rule 87 (ifstmt)]
    $default  reduce using rule 87 (ifstmt)

    elseprefix  go to state 133


State 96

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   85 ifprefix: IF LEFT_PARENTH expr . RIGHT_PARENTH

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    RIGHT_PARENTH  shift, and go to state 134


State 97

   91 whilestmt: WHILE $@8 LEFT_PARENTH . expr RIGHT_PARENTH $@9 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 135
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 98

   94 forstmt: FOR $@10 LEFT_PARENTH . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@11 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 57 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 136
    objectdef   go to state 34
    const       go to state 38


State 99

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   97 returnstmt: RETURN $@12 expr . SEMICOLON

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    SEMICOLON      shift, and go to state 137


State 100

   54 call: LEFT_PARENTH funcdef . RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH

    RIGHT_PARENTH  shift, and go to state 138


State 101

   65 temp_stmt: temp_stmt . stmt
   69 block: LEFT_BRACE $@3 temp_stmt . $@4 RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 68 ($@4)

    stmt        go to state 139
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    $@4         go to state 140
    funcdef     go to state 36
    funcprefix  go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 102

   64 indexedelem: LEFT_BRACE $@1 . expr COLON $@2 expr RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 141
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 103

   58 objectdef: LEFT_BRACKET elist RIGHT_BRACKET .

    $default  reduce using rule 58 (objectdef)


State 104

   56 elist: elist COMMA . expr

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 142
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 105

   59 objectdef: LEFT_BRACKET indexed RIGHT_BRACKET .

    $default  reduce using rule 59 (objectdef)


State 106

   61 indexed: indexed COMMA . indexedelem

    LEFT_BRACE  shift, and go to state 60

    indexedelem  go to state 143


State 107

   28 term: LEFT_PARENTH expr RIGHT_PARENTH .

    $default  reduce using rule 28 (term)


State 108

   41 primary: LEFT_PARENTH funcdef RIGHT_PARENTH .
   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 144

    $default  reduce using rule 41 (primary)


State 109

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   25     | expr AND expr .
   26     | expr . OR expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 25 (expr)


State 110

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   26     | expr OR expr .

    AND            shift, and go to state 70
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 26 (expr)


State 111

   14 expr: expr . PLUS expr
   14     | expr PLUS expr .
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    $default  reduce using rule 14 (expr)


State 112

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   15     | expr MINUS expr .
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    $default  reduce using rule 15 (expr)


State 113

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   16     | expr MUL expr .
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 16 (expr)


State 114

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   17     | expr DIV expr .
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 17 (expr)


State 115

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   18     | expr MODULO expr .
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    $default  reduce using rule 18 (expr)


State 116

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   23     | expr EQUAL expr .
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 23 (expr)


State 117

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   24     | expr NOT_EQUAL expr .
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    EQUAL      error (nonassociative)
    NOT_EQUAL  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 118

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   19     | expr GREATER expr .
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 72
    MINUS   shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 19 (expr)


State 119

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   21     | expr LESS expr .
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 72
    MINUS   shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 21 (expr)


State 120

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   20     | expr GREATER_EQUAL expr .
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 72
    MINUS   shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 20 (expr)


State 121

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   22     | expr LESS_EQUAL expr .
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr

    PLUS    shift, and go to state 72
    MINUS   shift, and go to state 73
    MUL     shift, and go to state 74
    DIV     shift, and go to state 75
    MODULO  shift, and go to state 76

    GREATER        error (nonassociative)
    LESS           error (nonassociative)
    GREATER_EQUAL  error (nonassociative)
    LESS_EQUAL     error (nonassociative)

    $default  reduce using rule 22 (expr)


State 122

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   36 assignexpr: lvalue ASSIGN expr .

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 36 (assignexpr)


State 123

   37 assignexpr: lvalue ASSIGN funcdef .

    $default  reduce using rule 37 (assignexpr)


State 124

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   48 member: lvalue LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    RIGHT_BRACKET  shift, and go to state 145


State 125

   52 call: lvalue LEFT_PARENTH elist . RIGHT_PARENTH
   56 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 146
    COMMA          shift, and go to state 104


State 126

   47 member: lvalue DOT ID .

    $default  reduce using rule 47 (member)


State 127

   53 call: lvalue DOT_DOT ID . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 147


State 128

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   50 member: call LEFT_BRACKET expr . RIGHT_BRACKET

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    RIGHT_BRACKET  shift, and go to state 148


State 129

   51 call: call LEFT_PARENTH elist . RIGHT_PARENTH
   56 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 149
    COMMA          shift, and go to state 104


State 130

   49 member: call DOT ID .

    $default  reduce using rule 49 (member)


State 131

   73 funcdef: funcprefix $@5 LEFT_PARENTH . $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    $default  reduce using rule 71 ($@6)

    $@6  go to state 150


State 132

   86 elseprefix: ELSE .

    $default  reduce using rule 86 (elseprefix)


State 133

   88 ifstmt: ifprefix stmt elseprefix . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 151
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    funcprefix  go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 134

   85 ifprefix: IF LEFT_PARENTH expr RIGHT_PARENTH .

    $default  reduce using rule 85 (ifprefix)


State 135

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   91 whilestmt: WHILE $@8 LEFT_PARENTH expr . RIGHT_PARENTH $@9 stmt

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    RIGHT_PARENTH  shift, and go to state 152


State 136

   56 elist: elist . COMMA expr
   94 forstmt: FOR $@10 LEFT_PARENTH elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@11 stmt

    SEMICOLON  shift, and go to state 153
    COMMA      shift, and go to state 104


State 137

   97 returnstmt: RETURN $@12 expr SEMICOLON .

    $default  reduce using rule 97 (returnstmt)


State 138

   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH . LEFT_PARENTH elist RIGHT_PARENTH

    LEFT_PARENTH  shift, and go to state 144


State 139

   65 temp_stmt: temp_stmt stmt .

    $default  reduce using rule 65 (temp_stmt)


State 140

   69 block: LEFT_BRACE $@3 temp_stmt $@4 . RIGHT_BRACE

    RIGHT_BRACE  shift, and go to state 154


State 141

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   64 indexedelem: LEFT_BRACE $@1 expr . COLON $@2 expr RIGHT_BRACE

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    COLON          shift, and go to state 155


State 142

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   56 elist: elist COMMA expr .

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82

    $default  reduce using rule 56 (elist)


State 143

   61 indexed: indexed COMMA indexedelem .

    $default  reduce using rule 61 (indexed)


State 144

   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 57 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 156
    objectdef   go to state 34
    const       go to state 38


State 145

   48 member: lvalue LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 48 (member)


State 146

   52 call: lvalue LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 52 (call)


State 147

   53 call: lvalue DOT_DOT ID LEFT_PARENTH . elist RIGHT_PARENTH

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 57 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 157
    objectdef   go to state 34
    const       go to state 38


State 148

   50 member: call LEFT_BRACKET expr RIGHT_BRACKET .

    $default  reduce using rule 50 (member)


State 149

   51 call: call LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 51 (call)


State 150

   73 funcdef: funcprefix $@5 LEFT_PARENTH $@6 . idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    ID  shift, and go to state 158

    $default  reduce using rule 84 (idlist)

    idlist  go to state 159


State 151

   88 ifstmt: ifprefix stmt elseprefix stmt .

    $default  reduce using rule 88 (ifstmt)


State 152

   91 whilestmt: WHILE $@8 LEFT_PARENTH expr RIGHT_PARENTH . $@9 stmt

    $default  reduce using rule 90 ($@9)

    $@9  go to state 160


State 153

   94 forstmt: FOR $@10 LEFT_PARENTH elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTH $@11 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 161
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 154

   69 block: LEFT_BRACE $@3 temp_stmt $@4 RIGHT_BRACE .

    $default  reduce using rule 69 (block)


State 155

   64 indexedelem: LEFT_BRACE $@1 expr COLON . $@2 expr RIGHT_BRACE

    $default  reduce using rule 63 ($@2)

    $@2  go to state 162


State 156

   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist . RIGHT_PARENTH
   56 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 163
    COMMA          shift, and go to state 104


State 157

   53 call: lvalue DOT_DOT ID LEFT_PARENTH elist . RIGHT_PARENTH
   56 elist: elist . COMMA expr

    RIGHT_PARENTH  shift, and go to state 164
    COMMA          shift, and go to state 104


State 158

   82 idlist: ID .

    $default  reduce using rule 82 (idlist)


State 159

   73 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist . RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE
   83 idlist: idlist . COMMA ID

    RIGHT_PARENTH  shift, and go to state 165
    COMMA          shift, and go to state 166


State 160

   91 whilestmt: WHILE $@8 LEFT_PARENTH expr RIGHT_PARENTH $@9 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 167
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    funcprefix  go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 161

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   94 forstmt: FOR $@10 LEFT_PARENTH elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTH $@11 stmt

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    SEMICOLON      shift, and go to state 168


State 162

   64 indexedelem: LEFT_BRACE $@1 expr COLON $@2 . expr RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    expr        go to state 169
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    const       go to state 38


State 163

   54 call: LEFT_PARENTH funcdef RIGHT_PARENTH LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 54 (call)


State 164

   53 call: lvalue DOT_DOT ID LEFT_PARENTH elist RIGHT_PARENTH .

    $default  reduce using rule 53 (call)


State 165

   73 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH . LEFT_BRACE $@7 temp_stmt RIGHT_BRACE

    LEFT_BRACE  shift, and go to state 170


State 166

   83 idlist: idlist COMMA . ID

    ID  shift, and go to state 171


State 167

   91 whilestmt: WHILE $@8 LEFT_PARENTH expr RIGHT_PARENTH $@9 stmt .

    $default  reduce using rule 91 (whilestmt)


State 168

   94 forstmt: FOR $@10 LEFT_PARENTH elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTH $@11 stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    DOUBLE_COLON  shift, and go to state 24

    $default  reduce using rule 57 (elist)

    expr        go to state 61
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    elist       go to state 172
    objectdef   go to state 34
    const       go to state 38


State 169

   14 expr: expr . PLUS expr
   15     | expr . MINUS expr
   16     | expr . MUL expr
   17     | expr . DIV expr
   18     | expr . MODULO expr
   19     | expr . GREATER expr
   20     | expr . GREATER_EQUAL expr
   21     | expr . LESS expr
   22     | expr . LESS_EQUAL expr
   23     | expr . EQUAL expr
   24     | expr . NOT_EQUAL expr
   25     | expr . AND expr
   26     | expr . OR expr
   64 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr . RIGHT_BRACE

    AND            shift, and go to state 70
    OR             shift, and go to state 71
    PLUS           shift, and go to state 72
    MINUS          shift, and go to state 73
    MUL            shift, and go to state 74
    DIV            shift, and go to state 75
    MODULO         shift, and go to state 76
    EQUAL          shift, and go to state 77
    NOT_EQUAL      shift, and go to state 78
    GREATER        shift, and go to state 79
    LESS           shift, and go to state 80
    GREATER_EQUAL  shift, and go to state 81
    LESS_EQUAL     shift, and go to state 82
    RIGHT_BRACE    shift, and go to state 173


State 170

   73 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE . $@7 temp_stmt RIGHT_BRACE

    $default  reduce using rule 72 ($@7)

    $@7  go to state 174


State 171

   83 idlist: idlist COMMA ID .

    $default  reduce using rule 83 (idlist)


State 172

   56 elist: elist . COMMA expr
   94 forstmt: FOR $@10 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTH $@11 stmt

    RIGHT_PARENTH  shift, and go to state 175
    COMMA          shift, and go to state 104


State 173

   64 indexedelem: LEFT_BRACE $@1 expr COLON $@2 expr RIGHT_BRACE .

    $default  reduce using rule 64 (indexedelem)


State 174

   73 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 . temp_stmt RIGHT_BRACE

    $default  reduce using rule 66 (temp_stmt)

    temp_stmt  go to state 176


State 175

   94 forstmt: FOR $@10 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH . $@11 stmt

    $default  reduce using rule 93 ($@11)

    $@11  go to state 177


State 176

   65 temp_stmt: temp_stmt . stmt
   73 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt . RIGHT_BRACE

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    RIGHT_BRACE   shift, and go to state 178
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 139
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    funcprefix  go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 177

   94 forstmt: FOR $@10 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@11 . stmt

    ID            shift, and go to state 1
    STRING        shift, and go to state 2
    INTEGER       shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 5
    WHILE         shift, and go to state 6
    FOR           shift, and go to state 7
    FUNCTION      shift, and go to state 8
    RETURN        shift, and go to state 9
    BREAK         shift, and go to state 10
    CONTINUE      shift, and go to state 11
    NOT           shift, and go to state 12
    LOCAL         shift, and go to state 13
    TRUE          shift, and go to state 14
    FALSE         shift, and go to state 15
    NIL           shift, and go to state 16
    MINUS         shift, and go to state 17
    PLUS_PLUS     shift, and go to state 18
    MINUS_MINUS   shift, and go to state 19
    LEFT_BRACE    shift, and go to state 20
    LEFT_BRACKET  shift, and go to state 21
    LEFT_PARENTH  shift, and go to state 22
    SEMICOLON     shift, and go to state 23
    DOUBLE_COLON  shift, and go to state 24

    stmt        go to state 179
    expr        go to state 27
    term        go to state 28
    assignexpr  go to state 29
    primary     go to state 30
    lvalue      go to state 31
    member      go to state 32
    call        go to state 33
    objectdef   go to state 34
    block       go to state 35
    funcdef     go to state 36
    funcprefix  go to state 37
    const       go to state 38
    ifprefix    go to state 39
    ifstmt      go to state 40
    whilestmt   go to state 41
    forstmt     go to state 42
    returnstmt  go to state 43


State 178

   73 funcdef: funcprefix $@5 LEFT_PARENTH $@6 idlist RIGHT_PARENTH LEFT_BRACE $@7 temp_stmt RIGHT_BRACE .

    $default  reduce using rule 73 (funcdef)


State 179

   94 forstmt: FOR $@10 LEFT_PARENTH elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTH $@11 stmt .

    $default  reduce using rule 94 (forstmt)
